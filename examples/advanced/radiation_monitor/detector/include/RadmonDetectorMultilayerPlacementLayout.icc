//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
// File name:     RadmonDetectorMultilayerPlacementLayout.icc
// Creation date: Sep 2005
// Main author:   Riccardo Capra <capra@ge.infn.it>
//
// Id:            $Id: RadmonDetectorMultilayerPlacementLayout.icc,v 1.3 2006-06-29 16:10:47 gunter Exp $
// Tag:           $Name: not supported by cvs2svn $
//

#ifndef   RADMONDETECTORMULTILAYERPLACEMENTLAYOUT_HH
 #error "RadmonDetectorMultilayerPlacementLayout.icc cannot be included directly. Please use RadmonDetectorMultilayerPlacementLayout.hh"
#else  /* RADMONDETECTORMULTILAYERPLACEMENTLAYOUT_HH */
 inline                                         RadmonDetectorMultilayerPlacementLayout :: RadmonDetectorMultilayerPlacementLayout()
 {
 }
 
 
 
 inline                                         RadmonDetectorMultilayerPlacementLayout :: RadmonDetectorMultilayerPlacementLayout(const RadmonDetectorMultilayerPlacementLayout & copy)
 :
  placementLabel(copy.placementLabel),
  multilayerLabel(copy.multilayerLabel),
  multilayerRotation(copy.multilayerRotation),
  multilayerPosition(copy.multilayerPosition)
 {
 }
 
 
 
 inline                                         RadmonDetectorMultilayerPlacementLayout :: ~RadmonDetectorMultilayerPlacementLayout()
 {
 }
 
 
 


 inline RadmonDetectorMultilayerPlacementLayout & RadmonDetectorMultilayerPlacementLayout :: operator=(const RadmonDetectorMultilayerPlacementLayout & copy)
 {
  placementLabel=copy.placementLabel;
  multilayerLabel=copy.multilayerLabel;
  multilayerRotation=copy.multilayerRotation;
  multilayerPosition=copy.multilayerPosition;
  
  return (*this);
 }
 
 
 


 inline const G4String &                        RadmonDetectorMultilayerPlacementLayout :: GetLabel(void) const
 {
  return placementLabel;
 }
 
 
 
 inline const G4String &                        RadmonDetectorMultilayerPlacementLayout :: GetMultilayerLabel(void) const
 {
  return multilayerLabel;
 }
 
 
 


 inline void                                    RadmonDetectorMultilayerPlacementLayout :: SetLabel(const G4String & label)
 {
  placementLabel=label;
 }
 
 
 
 inline void                                    RadmonDetectorMultilayerPlacementLayout :: SetMultilayerLabel(const G4String & label)
 {
  multilayerLabel=label;
 }
 
 
 


 inline const G4ThreeVector &                   RadmonDetectorMultilayerPlacementLayout :: GetAbsolutePosition(void) const
 {
  return multilayerPosition;
 }
 
 
 
 inline const G4RotationMatrix &                RadmonDetectorMultilayerPlacementLayout :: GetAbsoluteRotation(void) const
 {
  return multilayerRotation;
 }
 
 
 


 inline void                                    RadmonDetectorMultilayerPlacementLayout :: SetAbsolutePosition(const G4ThreeVector & position)
 {
  multilayerPosition=position;
 }
 
 
 
 inline void                                    RadmonDetectorMultilayerPlacementLayout :: SetAbsoluteRotation(const G4RotationMatrix & rotation)
 {
  multilayerRotation=rotation;
 }
#endif /* RADMONDETECTORMULTILAYERPLACEMENTLAYOUT_HH */
