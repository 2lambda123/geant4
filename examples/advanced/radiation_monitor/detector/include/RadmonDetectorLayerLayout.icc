//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// File name:     RadmonDetectorLayerLayout.icc
// Creation date: Sep 2005
// Main author:   Riccardo Capra <capra@ge.infn.it>
//
// Id:            $Id: RadmonDetectorLayerLayout.icc,v 1.4 2006-06-28 13:47:35 gunter Exp $
// Tag:           $Name: not supported by cvs2svn $
//

#ifndef   RADMONDETECTORLAYERLAYOUT_HH
 #error "RadmonDetectorLayerLayout.icc cannot be included directly. Please use RadmonDetectorLayerLayout.hh"
#else  /* RADMONDETECTORLAYERLAYOUT_HH */
 inline                                         RadmonDetectorLayerLayout :: RadmonDetectorLayerLayout()
 :
  layerThickness(0.)
 {
 }
 
 
 
 inline                                         RadmonDetectorLayerLayout :: RadmonDetectorLayerLayout(const RadmonDetectorLayerLayout & copy)
 :
  RadmonLayoutEntityWithAttributes(copy),
  layerLabel(copy.layerLabel),
  layerType(copy.layerType),
  layerThickness(copy.layerThickness)
 {
 }
 
 
 
 inline                                         RadmonDetectorLayerLayout :: ~RadmonDetectorLayerLayout()
 {
 }
 
 
 
 

 inline RadmonDetectorLayerLayout &             RadmonDetectorLayerLayout :: operator=(const RadmonDetectorLayerLayout & copy)
 {
  RadmonLayoutEntityWithAttributes::operator=(copy);
  layerLabel=copy.layerLabel;
  layerType=copy.layerType;
  layerThickness=copy.layerThickness;
  
  return (*this);
 }
 
 
 
 

 inline const G4String &                        RadmonDetectorLayerLayout :: GetLabel(void) const
 {
  return layerLabel; 
 }
 
 
 
 inline const G4String &                        RadmonDetectorLayerLayout :: GetType(void) const
 {
  return layerType;
 }
 
 
 
 inline G4double                                RadmonDetectorLayerLayout :: GetThickness(void) const
 {
  return layerThickness; 
 }
 
 
 
 inline void                                    RadmonDetectorLayerLayout :: SetLabel(const G4String & label)
 {
  layerLabel=label; 
 }
 
 
 
 inline void                                    RadmonDetectorLayerLayout :: SetType(const G4String & type)
 {
  layerType=type;
 }
 
 
 
 inline void                                    RadmonDetectorLayerLayout :: SetThickness(G4double thickness)
 {
  layerThickness=thickness;
 }
#endif /* RADMONDETECTORLAYERLAYOUT_HH */
