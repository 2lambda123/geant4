//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// File name:     RadmonDetectorPadsData.icc
// Creation date: Sep 2005
// Main author:   Riccardo Capra <capra@ge.infn.it>
//
// Id:            $Id: RadmonDetectorPadsData.icc,v 1.2 2006-06-28 13:48:59 gunter Exp $
// Tag:           $Name: not supported by cvs2svn $
//

#ifndef   RADMONDETECTORPADSDATA_HH
 #error "RadmonDetectorPadsData.icc cannot be included directly. Please use RadmonDetectorPadsData.hh"
#else  /* RADMONDETECTORPADSDATA_HH */
 inline                                         RadmonDetectorPadsData :: RadmonDetectorPadsData()
 :
  padWidth(0.),
  padHeight(0.),
  padMaterial(0)
 {
 }
 
 
 
 inline                                         RadmonDetectorPadsData :: ~RadmonDetectorPadsData()
 {
 }





 inline G4double                                RadmonDetectorPadsData :: GetWidth(void) const
 {
  return padWidth;
 }



 inline G4double                                RadmonDetectorPadsData :: GetHeight(void) const
 {
  return padHeight;
 }



 inline G4Material *                            RadmonDetectorPadsData :: GetMaterial(void) const
 {
  return padMaterial;
 }





 inline void                                    RadmonDetectorPadsData :: SetWidth(G4double width)
 {
  padWidth=width;
 }



 inline void                                    RadmonDetectorPadsData :: SetHeight(G4double height)
 {
  padHeight=height;
 }



 inline void                                    RadmonDetectorPadsData :: SetMaterial(G4Material * material)
 {
  padMaterial=material;
 }



 inline void                                     RadmonDetectorPadsData :: AppendPosition(const G4ThreeVector & position)
 {
  AppendPositionAndRotation(position, G4RotationMatrix::IDENTITY);
 }
#endif /* RADMONDETECTORPADSDATA_HH */
