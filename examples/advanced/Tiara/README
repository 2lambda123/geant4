Simulation of the TIARA experiment using importance sampling
============================================================

The example has been tested on CERN RH 7.3 with the
gcc-3.2 compiler.

Information about the Tiara experiment may be found at:
http://idsun1.kek.jp/nakao/research/tiara/tiara.htm

Note for system testing: see points 1, 1.3 and 3.2.


1) Setting the environment
==========================

You should have Geant4 compiled with:
"G4LIB_BUILD_SHARED" set to 1.
You need to set:
"NeutronHPCrossSections" (e.g. to ${G4INSTALL}/data/G4NDL3.7)


Three examples are given of how to set environment variables
in the three cases:

1.1) Anaphe via AFS:
--------------------
   You have access to afs and you want to use Anaphe for the
   analysis: 
   Set the following environment variables:
   "G4ANALYSIS_USE"

   "ANAPHETOP" (e.g. /afs/cern.ch/sw/lhcxx)
   "AIDA_DIR"  (e.g. /afs/cern.ch/sw/contrib/AIDA/3.0/src/cpp)
   "ANAPHE_SCRIPTS" (e.g. /afs/cern.ch/sw/lhcxx/share/LHCXX/5.0.4/scripts)

   Finally source the script env.Common.csh


1.2) No afs but a local Anphe and AIDA installation:
----------------------------------------------------
   You don't use afs but you have a local installation of Anaphe and AIDA
   (e.g. from http://anaphe.web.cern.ch/anaphe/.
   Set the following environment variables:
   "G4ANALYSIS_USE"
 
   "ANAPHETOP" (e.g. /users/dressel/Anaphe/release)
   "AIDA_DIR"  (e.g. /users/dressel/AIDA/3.0.0/3.0.0/AIDA/3.0/src/cpp)
   "ANAPHE_SCRIPTS" (e.g. ${ANAPHETOP}/share/LHCXX/5.0.5/scripts)

   Finally source the script env.Common.csh


1.3) No afs and no Anaphe and no AIDA (e.g. for system testing):
----------------------------------------------------------------
   You don't want to use Anaphe and AIDA and you don't have no afs access.
   Make sure "G4ANALYSIS_USE" is unset (e.g. unsetenv G4ANALYSIS_USE).

   Set "PYTHONVERSION" (e.g. to  2.2)
   Set "PYTHON_INCLUDE_DIR" (e.g. to  /usr/include/python${PYTHONVERSION})
   Set "PYTHON_LIB_DIR" (e.g. to /usr/lib/python${PYTHONVERSION}/config)

   Set "SWIG"  (e.g. to /users/dressel/local/bin/swig)

   Set "CLHEP_BASE_DIR" (e.g. to  /users/dressel/CLHEP)

   Finally source the script env.Common.csh


2) Building the example
=======================

Geant4 has to be compiled using G4LIB_BUILD_SHARED 1 and the one of the 
above environment settings have to be set.

Type "gmake".


2.1) In more detail
-------------------

Geant4 should be compiled into granular shared libraries.
Therefore before compiling Geant4 set "G4LIB_BUILD_SHARED" to "1".

External packages used in this example are Anaphe, SWIG and Python.
The Anaphe package comes with SWIG and Python versions used to build
Anaphe itself. These SWIG and Python versions should also be used with 
this example if Anaphe is used. 


2.2) Cleaning up
----------------
To remove the files created by swig ( *_wrap.cc, the corresponding 
.py files) use "gmake swigClean.
To remove the directories of compiled code related to this example under 
$G4WORKDIR/tmp/$G4SYSTEM/ use "gmake tiaraClean".


3) Running the example:
=======================


3.1) Using Anaphe
-----------------
Change to the sub directory "run" and execute "runSim.py".
"runSim.py" runs an example configuration which nay be
changed by the user. The results of the simulation are stored in 
the directory "simData". 
The script "runSim.py" periodically prints scoring information to the 
screen. 
It also prints out the relative path of a ".shelve" file.
This file can be used to access results of the simulation.

Results may be viewed e.g. using lizard and the script:
1) Start python2.2 or lizard
2) type: import dataAcess
3) type: p = dataAcess.ExpMcPlot (shelveFileName,"00")
         where shelveFileName is the name (enclosed in quotes) of the
         shelve file created during the execution of anaSim.py. 
         The name is printed on the screen during execution of runSim.py.
4) type: p.display ()

Since the simulation time used by "runSim.py" is only 5 minutes the
calculated results have large errors. If you want to see a better result
do the following changes in "naSim.py".
Extend the total run time to 30 minutes by setting:
"totalTime = 30 * myUtils.min", 
set the print out period to 10 minutes by setting:
"timeForOneRun = 10 * myUtils.min".


3.2) Not using Anaphe (mainly for system testing)
-------------------------------------------------
Change to the sub directory "run" and execute 
runSimNoAnalysis.py.





4) Content of the directory:
============================


simCommon.csh - a script to setup environment variables
    in case the above one of the above environment settings have been
    done beforehand.

GNUmakefile - for building the example


data / - directory containing experimental data

      expDataOrig - experimental data taken from 
                    http://idsun1.kek.jp/nakao/research/tiara/tiara.htm

      expDataConverted  - some of the experimental data and the source
                    spectra converted into Anaphes DataPointSet
                    and stored in Anaphes xml format 


source / - directory containing the source code

        tiara - C++ source code 

        tiaraPhysicsLists - C++ source code of physics lists

        tiaraPhysicsPackaging - C++ source cod with common 
                                classes for the physics lists

        CLHEPWrapper - wrapper classes for usage in python
                     \include\CLHEP.i - specification file for swig
                     \src\CLHEP_wrap.cc - wrapper created with swig

	G4KernelWrapper - wrapper classes for usage in python

        TiaraWrapper - wrapper classes for usage in python

        py_modules - python modules for running and aanalysing

	swig.gmk - makefile rules for using swig  

run / - directory for running the example
       runSim.py - executable example script
       runSimNoAnalysis.py - executable script for running without 
                             analysis



