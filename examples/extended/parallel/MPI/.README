//$Id$

///\file "parallel/MPI/.README"
///\brief Examples MPI README page

/*! \page Examples_MPI Category "parallel/MPI"

<h1> Geant4 MPI Interface </h1>

  \author
  Koichi Murakami (KEK) / Koichi.Murakami@kek.jp

\section Examples_MPI_s1 About the interface

G4MPI is a native interface with MPI libraries. The directory contains
a Geant4 UI library and a couple of parallelized examples.
Using this interface, users applications can be parllelized with
different MPI compliant libraries, such as OpenMPI, LAM/MPI, MPICH2,
and so on.

\section Examples_MPI_s2 System Requirements:

\subsection Examples_MPI_subs21 Platform

- Linux (32bit/64bit)
- MacOS (Tiger)

\subsection Examples_MPI_subs22  MPI implementation

- Open MPI (1.4.2) \n
  http://www.open-mpi.org/

- LAM/MPI (7.1.3) (development is terminated. maintenance only) \n
  http://www.lam-mpi.org/

- MPICH2 (1.2.1p1) \n
  http://www.mcs.anl.gov/research/projects/mpich2/

\subsection Examples_MPI_subs23 Optional
- ROOT for histogramming/analysis


\section Examples_MPI_s3 G4MPI UI library

G4MPI UI library is provided in the "mpi_interface" directory.
Start with building the G4MPI UI library according to the instruction
in the directory.


\section Examples_MPI_s4 How to make parallel applications:

An example of a main program:
\verbatim
#include "G4MPImanager.hh"
#include "G4MPIsession.hh"

int main(int argc,char** argv)
{
  // At first, G4MPImanager/G4MPIsession should be created.
  G4MPImanager* g4MPI= new G4MPImanager(argc,argv);

  // MPI session (G4MPIsession) instead of G4UIterminal
  G4MPIsession* session= g4MPI-> GetMPIsession();

  // user application setting
  G4RunManager* runManager= new G4RunManager();

  // ....

  // After user application setting, just start a MPI session.
  // MPIsession treats both interactive and batch modes.
  session-> SessionStart();

  // Finally, terminate the program
  delete g4MPI;
  delete runManager;
}
\endverbatim


Notes about session shell:

LAM/MPI users can use "G4tcsh" as an interactive session shell.
For other users (Open MPI/MPICH2), plese use G4csh (default).

In case of OpenMPI, LD_LIBRARY_PATH for OpenMPI runtime libraries
should be set at run time. Alternatively, you can add this path
to the dynamic linker configuration using `ldconfig`.
(needs sys-admin authorization)


\section Examples_MPI_s5 How to use:

\subsection Examples_MPI_subs51 MPI runtime rnvironment

-# Make hosts/cluster configuration of your MPI environment. 
   \n
-# Launch MPI runtime environment, typically executing
   lamboot (LAM) / mpdboot (MPICH2).

\subsection Examples_MPI_subs52 How to run

For example,
\verbatim
> mpiexec -n # <your application>
\endverbatim

Instead, "mpirun" command is more convenient for LAM users.


\section Examples_MPI_s6 MPI G4UI commands:

G4UI commands handling the G4MPI interface are placed in /mpi/.

Command directory path : /mpi/

Guidance :
MPI control commands

\verbatim
 Sub-directories :
 Commands :
   verbose *        Set verbose level.
   status *         Show mpi status.
   execute *        Execute a macro file. (=/control/execute)
   beamOn *         Start a parallel run w/ thread.
   .beamOn *        Start a parallel run w/o thread.
   masterWeight *   Set weight for master node.
   wait *           Wait until beamOn-s on all nodes are done. (batch mode only)
   showSeeds *      Show seeds of MPI nodes.
   setMasterSeed *  Set a master seed for the seed generator.
   setSeed *        Set a seed for a specified node.
\endverbatim

\subsection Examples_MPI_subs61 Notes:

While "/run/beamOn" and "/mpi/beamOn" commands invoke beam-on in background,
so you can input UI commands even while event processing.

The original "/control/execute" and "/run/beamOn" are overwritten
with "/mpi/execute" and "/mpi/beamOn" commands respectively,
customized for the MPI interface.


\section Examples_MPI_s7 Examples

There are a couple of examples for Geant4 MPI applications.

In some cases, you need to set some additional environment variables
for running examples:

- G4LEVELGAMMADATA : directory path for the data of
                     "low energy electromagnetic processes".

For running ROOT applications,

- ROOTSYS         : root path of the ROOT package
- LD_LIBRARY_PATH : add ROOT library path, such as $(ROOTSYS)/lib/root


\subsection Examples_MPI_subs71 [exMPI01]
A simple application.

- Geometry     : chamber / calorimeter
- Primary      : particle gun (200 MeV electron as default)
- Physics List : standard EM

- Particles are transported in a geometry without any scoring.
- Learn how to parallelize your G4 session.

See also \link ExampleexMPI01 [exMPI01] page \endlink.

\subsection Examples_MPI_subs72 [exMPI02] (ROOT application)
An example of dosimetry in a water phantom.

- Geometry     : water phantom
- Primary      : particle gun (200 MeV proton as default)
- Physics List : QGSP_BIC

- Score dose distribution in a water phantom.
- Learn how to paralleize your applications.
- Create a ROOT file containing histograms in each node.
  - treat multiple outputs properly: \n
    each slave node generate a ROOT file, whose file name should
    be different from each other.

See also \link ExampleexMPI02 [exMPI02] page \endlink.

*/
