//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
// $Id: RE01DetectorParameterDef.icc,v 1.1 2004-11-26 07:37:42 asaim Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//


  expHall_x = 600.*cm;
  expHall_y = 600.*cm;
  expHall_z = 600.*cm;

  trkTubs_rmax =  50.*cm;
  trkTubs_rmin =  20.*cm;
  trkTubs_dz   = 100.*cm;
  trkTubs_sphi =   0.*deg;
  trkTubs_dphi = 360.*deg;

  notrkLayers = 5;
  tracker_radius[0] = 25.*cm;
  tracker_radius[1] = 30.*cm;
  tracker_radius[2] = 35.*cm;
  tracker_radius[3] = 40.*cm;
  tracker_radius[4] = 45.*cm;

  tracker_thick     =  0.5*cm;
  for(int il=0;il<5;il++)
  {
    tracker_length[il] = tracker_radius[il];
  }

  caloTubs_rmax = 300.*cm;
  caloTubs_rmin =  50.*cm;
  caloTubs_dz   = 200.*cm;
  caloTubs_sphi =   0.*deg;
  caloTubs_dphi = 360.*deg;

  absorber_thick = 3.*cm;
  scinti_thick = 2.*cm;
  nocaloLayers = int((caloTubs_rmax-caloTubs_rmin)/(absorber_thick+scinti_thick));

  segmentsinPhi = 48;
  caloCell_rmax = caloTubs_rmax;
  caloCell_rmin = caloTubs_rmin;
  caloCell_dz   = caloTubs_dz;
  caloCell_sphi = caloTubs_sphi;
  caloCell_dphi = caloTubs_dphi/segmentsinPhi;

  segmentsinZ = 20;
  caloRing_rmax = caloCell_rmax;
  caloRing_rmin = caloCell_rmin;
  caloRing_dz   = caloCell_dz/segmentsinZ ;
  caloRing_sphi = caloCell_sphi;
  caloRing_dphi = caloCell_dphi;

