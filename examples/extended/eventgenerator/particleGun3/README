$Id: README,v 1.1 2010-05-16 21:38:18 maire Exp $
-------------------------------------------------------------------

     =========================================================
     Geant4 - an Object-Oriented Toolkit for Simulation in HEP
     =========================================================

                            ParticleGun3 
                            ------------
			    
 How to work in spherical coordinates with rotation matrix.
 	
 1- Geometry construction
    ---------------------

 It is a simple box which represente an 'infinite' homogeneous medium.
  
 2- Physics list
    ------------

 PhysicsList.cc defines only geantino and transportation process.
         	
 3- Primary generator
    -----------------
 
 One shoots a geantino randomly uniform within a spherical shell.
 
 a) Vertex position
 One wishes to shoot uniformly within a spherical shell.
 One works in spherical coordinates. One uses inverse cumulative method with
 analytical formulae.
 Histograms 1-2-3 demonstrate uniform distribution of vertex position.
 
 b) Momentum direction
 One wants to limit particle direction uniformly within (alphaMin, alphaMax).
 First, one generates momentum direction in the master frame (eg. World).
 Then, one rotates momentum in vertex_position frame, using rotateUz() function.
 RotateUz() transforms uz to ur. It is composition of two elementary rotations:
 theta around oy, then phi around oz (non commutative).
http://proj-clhep.web.cern.ch/proj-clhep/manual/UserGuide/VectorDefs/node49.html
 Histograms 4-5 show momentum direction in vertex_position frame.
  	
 4- Visualisation
    -------------
 
 Visualization Manager is set in the main().
 Initialisation of the drawing is done via the commands
 /vis/.. in the macro vis.mac. This macro is automatically read from the main 
 in case of interactive running mode.
 
 5- How to start ?
    --------------
 
  - compile and link to generate an executable
 	% cd gun
 	% gmake
 		
  - execute particleGun3 in 'batch' mode from macro files
 	% ParticleGun3   run1.mac
 		
  - execute particleGun3 in 'interactive mode' with visualization
 	% particleGun3
 	....
 	Idle>      ---> type your commands. For instance:
	Idle> /run/beamOn 
	....
	Idle> /run/beamOn 10
	....				
 	Idle> exit
	
 6- Histograms
    ----------
 
  particleGun3 produces several 1D histograms which are saved as
  particleGun.root by default.

      1 : vertex position: radial  distr dN/dv = f(r)
      2 : vertex position: angular distr dN/dv = f(theta)
      3 : vertex position: angular distr dN/dv = f(phi)
      4 : momentum direction: angular distr dN/dOmega = f(alpha)
      5 : momentum direction: angular distr dN/dOmega = f(psi)      
            
   The histograms are managed by the HistoManager class and its Messenger. 
   The histos can be individually activated with the command :
   /testem/histo/setHisto id nbBins  valMin valMax unit 
   where unit is the desired unit for the histo (MeV or keV, deg or mrad, etc..)
   
   One can control the name of the histograms file with the command:
   /testem/histo/setFileName  name  (default particleGun)
   
   It is possible to choose the format of the histogram file (hbook, root, XML)
   with the command /testem/histo/setFileType (root by default)
   
   It is also possible to print selected histograms on an ascii file:
   /testem/histo/printHisto id
   All selected histos will be written on a file name.ascii  (default particleGun) 

  Note that, by default, histograms are disabled. To activate them, uncomment
  the flag G4ANALYSIS_USE in GNUmakefile.
 
  Before compilation of the example it is optimal to clean up old files:
  	gmake histclean
  	gmake 

 7- Using histograms
    ---------------- 

  To use histograms, at least one of the AIDA implementations should be 
  available. See the file InstallAida.txt
  
