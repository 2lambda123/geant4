macro run1 f=3 n=3 z=13 que=32-rb20-hp
 nEvts = 2000 * [f]
 if [z] = 13 then	
  exec preco ^27!Al al1314 13 14 90 450 [nEvts] [n] [que] 2 60 | 450 mb is reaction CS
 endif
return
*
macro run f=9 n=3 que=atsbhpd
  nEvts = 2000 * [f]
  exec preco ^27!Al al1314 13 14 90 999 [nEvts] [n] [que] 2 81
return
*
macro preco targ=^12!C file=c0606 np=6 nn=6 e=90 cs=999 _
           runn=2000 next=3 pq=32-rb205-hp nzone=2 nvex=60 _
           dir=./
*
  hi/del *
  ve/del *
  ve/cr angle(5) r 30 45 60 90 120
  exec creavec [nvex]
  do i = 35 , $sigma(34+[next])
   clo [i]
  enddo
*
  exec chips [targ] [file] [np] [nn] [e] [runn] [next] [dir]
*
  exec getdat [file] [e]
*
  chain -preco90
  hi/fil 35 [dir]chips_[file]_e[e]_1.hbook
  hrin 1
  chain preco90 //LUN35
  do i = 2 , [next]
    lun = 34 + [i]
    hi/fil [lun] [dir]chips_[file]_e[e]_[i].hbook
    hrin 1 ! 99999
    chain preco90 //LUN[lun]
  enddo
  cd //preco90
*
  nevts = $hinfo(1,'sum')
  hi/del 1
*
  upcol   = violet
  downcol = red
  hxmin =  3.
  hxmax =  90.0
  kxmin =  0.
  kxmax =  260.
  hymin =  3.e-5
  hymax =  .049999
  hzero =  0.1e-12
  hfbin =  1
  hnbin =  50
  ptsize = 0.24
  lgndsz = 0.35
  dangle = 10.0
  pi = 3.141593
  Alias/del paperX
  Alias/cr  paperX '14.0' 
  exec ~/PTOOL/reset
  exec ~/PTOOL/setpq
  danrad = $sigma([pi]*[dangle]/180.)
  hlxmin = $sigma(log10([hxmin]))
  hlxmax = $sigma(log10([hxmax]))
  halfbn = $sigma(0.5*([hlxmax]-[hlxmin])/[hnbin])
*
  1d         60 'T?p! at  30 deg (MeV)' [hnbin] [hlxmin] [hlxmax]
  hi/copy 60 61 'T?p! at  45 deg (MeV)'
  hi/copy 60 62 'T?p! at  60 deg (MeV)'
  hi/copy 60 63 'T?p! at  90 deg (MeV)'
  hi/copy 60 64 'T?p! at 120 deg (MeV)'
  hi/copy 60 65 'T?p! at  30 deg (MeV)'
  hi/copy 60 66 'T?p! at  45 deg (MeV)'
  hi/copy 60 67 'T?p! at  60 deg (MeV)'
  hi/copy 60 68 'T?p! at  90 deg (MeV)'
  hi/copy 60 69 'T?p! at 120 deg (MeV)'
  hi/copy 60 81 'zero level'
  hi/copy 60 82 'dT in MeV'
  call hbarx(0)
*
* -- adjust zero levels, create dT histogram
  ve/cr zerol([hnbin]) r [hnbin]*[hzero]
  put/cont 81 zerol
  put/err  81 $sigma(0.8*zerol)
** ___ Reuse of "zerol" to read the bin mean T-values ___
  get/abs  82 zerol
  put/cont 82 $sigma(10.**(zerol+[halfbn])-10.**(zerol-[halfbn]))
  ve/del zerol
*
  cut 0 -
  cut $11 nd=0.and.(PDG=2212.or.(ns=0.and.nz=1.and.nn=0)) | protons
  cut $12 nd=0.and.(PDG=2112.or.(ns=0.and.nz=0.and.nn=1)) | neutrons
*
  opt zfl
  swi z
  zone 2 5
  do i = 0 , 4
    j    = [i]+5
    k    = [i]+1
    l    = [j]+1
    a=angle([k])
    arad =  $sigma([pi]*[a]/180.)
    message 'i=',[i],', adeg=',[a],', arad=',[arad]
    cut [k] $11.and.abs(atan2(sqrt(px**2+py**2),pz)-[arad])<[danrad]
    cut [l] $12.and.abs(atan2(sqrt(px**2+py**2),pz)-[arad])<[danrad]
    nt/pl 20.log10(E-m+0.001) $[k] ! ! -6[i]
    nt/pl 20.log10(E-m+0.001) $[l] ! ! -6[j]
    domega = $sigma(2.*[pi]*(cos([arad]-[danrad])-cos([arad]+[danrad])))
*    w = $sigma([cs]*1000000./[domega]/[nevts])
    w = $sigma([cs]/[domega]/[nevts])
    div 6[i] 82 6[i]  1. 1.
    add 6[i] 81 6[i] [w] 1.
    div 6[j] 82 6[j]  1. 1.
    add 6[j] 81 6[j] [w] 1.
  enddo
  pi/del ' '
* Draw & Create the file
  swi gz
* Create the output file only
*  swi z
*
  opt vert
  set xwin 0.0001
  set ywin 0.0001
  title [targ]//'(p,p/n) reaction at E?p! = '//[E]//' MeV'
  clr
  zone 1 2
  set yval 70.
*  set xval 70.
  set xval
  opt logy
  opt linx
  null [kxmin] [kxmax] [hymin] [hymax]
  set dmod 1
  ***** M.K. ****
  opt date
  ***************
  opt tic
  opt nsta
  opt utit
  set errx 0.01
  set xlab 1.25
  ve/cr mrk(5) R 20 25 22 24 21
  ve/cr md(5) R 1 2 1 2 1
  title ' ' u
  exec ~/PTOOL/black
  do i = 0 , 9
    if [i] < 5 then
      k    = [i]+1
    else
      k    = [i]-4
    endif
    mk=mrk([k])
    mod=md([k])
    a=angle([k])
    if [i] = 5 then
      set yval
      null [kxmin] [kxmax] [hymin] [hymax]
    endif
    if [i] = 9 then
      exec ~/PTOOL/black
      atitle 'k = (p+T)/2 (MeV)       ^!' ' '
    endif
    title ' ' 
*    exec ~/PTOOL/snotes 144. 1.0 '1.0' 0. [lgndsz] -40
*    exec ~/PTOOL/snotes 144. 0.1 '0.1' 0. [lgndsz] -40
    set lwid 7.
**    fun/pl .11*EXP(-x/25) 30 250 S
*  if [i] = 9 then
    if [i] < 5 then
      exec ~/PTOOL/[downcol]
      itx 90. .025 protons ([q]=30,45,60,90,120)
      itx 40. .00025 CHIPS
      m = 938.273 | proton
      ve/copy $sigma(sqrt(tp[a]*(2.*[m]+tp[a]))) pp[a]
      h/errors $sigma(0.5*(pp[a]+tp[a])) $sigma(sp[a]/pp[a]) _
               ?  $sigma(sp[a]/pp[a]/100) [nvex] [mk] [ptsize] 0
*************** Temporary **************
*    ve/re abspr,con p90_p_[a]_lepr.dat
*    ve/cop $SIGMA(con*.45) conp
*    put/cont 6[i] conp
***********************************^^END
      exec hsolid 6[i] [hfbin] [hnbin] [downcol] [m] [mod]
    else
      exec ~/PTOOL/[upcol]
      itx 90. .025 neutrons ([q]=30,45,60,90,120)
      m = 939.565 | neutron
      ve/copy $sigma(sqrt(tn[a]*(2.*[m]+tn[a]))) pn[a]
      h/errors $sigma(0.5*(pn[a]+tn[a])) $sigma(sn[a]/pn[a]) _
               ?  $sigma(sn[a]/pn[a]/100) [nvex] [mk] [ptsize] 0
*************** Temporary **************
*    ve/re abspr,con p90_n_[a]_lepr.dat
*    ve/cop $SIGMA(con*.45) conp
*    put/cont 6[i] conp
***********************************^^END
      exec hsolid 6[i] [hfbin] [hnbin] [upcol] [m] [mod]
    endif
*  endif
*    txt = [a]//'[\260]'
*    exec ~/PTOOL/notes .8 .83 [txt] 0. [lgndsz] -40
    if [i] = 4 then
      exec ~/PTOOL/black
      atitle ' ' 'd[s]/pdEd[W] (mb MeV^-2! sr^-1!) ^!'
      exec paramline 0.20 0.92
    endif
  enddo
*
  exec ~/PTOOL/black
  set xwin
  set ywin
  set xval
  set yval
  set errx
  set xlab
*
  exec prieps preco_[file]_e[e]
  if [runn] = 0 then
    wait ' ' 2
***    shell lpr -P[pq] preco_[file]_e[e].ps
***    shell xprint -P[pq] preco_[file]_e[e].ps
  endif
*
stop:
*
return
*
macro chips targ=Al file=al1314 np=13 nn=14 e=90 runn=2000 next=3 dir=./
  exec readpar pf=[dir]chipstest_[file].in
  if [runn] > 0 then
    do i = 1 , [next]
      pdg  = $sigma([np]*1000+[nn])
      pdgt = 90000000 + [pdg]
      nevt = [runn] + [i]
      ve/cr   work(3) i [pdgt] [nevt] 2212
      ve/copy work(1:1) pdgtg
      ve/copy work(2:2) nevnt
      ve/copy work(3:3) pdgpr
      ve/del  work
      energy = [e]+938.273
      moment = $sigma(sqrt([energy]*[energy]-938.273*938.273))
      *ve/cr   work(2) r [energy] [moment]
      *** Make automatic energy calculation ***
      ve/cr   work(2) r 0 [moment]
      ve/copy work(1:1) enb
      ve/copy work(2:2) momb
      ve/del  work  
      exec writepar pf=[dir]chipstest.in
*      shell rm chips_[file].log
      wait ' ' 2
      shell ../test19 | > chips_[file].log
      wait ' ' 2
	  exec makehbk
      wait ' ' 2
      shell mv chips.hbook [dir]chips_[file]_e[e]_[i].hbook
    enddo
  endif
return
*
macro readpar  pf=chipstest.in
  ve/read  temp,ssse,eepr,nop,momb,enb,pdgpr,pdgtg,nevnt,freeN,freeD,clustP,rMed,solA_
              [pf] 'F7.2,F5.2,F5.2,I4,F6.0,F6.0,2I9,I9,5F5.2' 'OC' -/*/  
return
macro writepar pf=chipstest.in
  ve/write temp,ssse,eepr,nop,momb,enb,pdgpr,pdgtg,nevnt,freeN,freeD,clustP,rMed,solA_
              [pf] 'F7.2,F5.2,F5.2,I4,F6.0,F6.0,2I9,I9,5F5.2' 'OC'
return
*
macro getdat file=al1314 e=90
*
* -- in the preco_[file]_h_e[e]_ang.vexp the hadron(h:p,d,t,he3,he4) spectra are given in:
* --  mbarn MeV^-1 Omega^-1, function of T in MeV 
  ve/cr angle(5) r 30 45 60 90 120
  do i = 1 , 5
    a  = angle([i])
    ve/re tn[a],sn[a] preco_[file]_n_e[e]_[a].dat
    ve/re tp[a],sp[a] preco_[file]_p_e[e]_[a].dat
  enddo
return
*
macro hsolid id=66 hf=1 hn=60 col=black m=939.567 mod=1
  set dmod [mod]
  nb = $sigma([hn]-[hf]+1)
  ve/cr wx([nb]) r
  ve/cr wy([nb]) r
  ve/cr wd([nb]) r
  get/abs  [id]([hf]:[hn]) wx
  get/cont [id]([hf]:[hn]) wy
  get/err  [id]([hf]:[hn]) wd
  ve/copy $sigma(10.**wx) wt
  ve/copy $sigma(sqrt(wt*(2.*[m]+wt))) wp
  exec ~/PTOOL/white 8
  set lwid 5
  graph [nb] $sigma(0.5*(wp+wt)) $sigma(wy/wp) l
  exec ~/PTOOL/[col]
  set lwid 5
  graph [nb] $sigma(0.5*(wp+wt)) $sigma(wy/wp) l
  exec ~/PTOOL/black
  set dmod 3
  graph [nb] $sigma(0.5*(wp+wt)) $sigma(wy/wp) l
  set lwid 5
  set dmod 1
***  h/errors $sigma(0.5*(wp+wt)) $sigma(wy/wp) _
***           $sigma(0.*wt) $sigma(wd/wp) [nb] 1 .01
  ve/del wx,wy,wd,wt,wp
return
*
macro creavec dimvex=60
 ve/cr temp(1) r 
 ve/cr ssse(1) r
 ve/cr eepr(1) r
 ve/cr nop(1) i
 ve/cr momb(1) r
 ve/cr enb(1) r
 ve/cr pdgpr(1) i
 ve/cr pdgtg(1) i
 ve/cr nevnt(1) i
 ve/cr freeN(1) r
 ve/cr freeD(1) r
 ve/cr clustP(1) r
 ve/cr rMed(1) r
 ve/cr solA(1) r
 ve/cr tp30(22) r
 ve/cr sp30(22) r
 ve/cr tp45(21) r
 ve/cr sp45(21) r
 ve/cr tp60(20) r
 ve/cr sp60(20) r
 ve/cr tp90(16) r
 ve/cr sp90(16) r
 ve/cr tp120(12) r
 ve/cr sp120(12) r
 ve/cr tn30(27) r
 ve/cr sn30(27) r
 ve/cr tn45(28) r
 ve/cr sn45(28) r
 ve/cr tn60(25) r
 ve/cr sn60(25) r
 ve/cr tn90(22) r
 ve/cr sn90(22) r
 ve/cr tn120(15) r
 ve/cr sn120(15) r
return
*
macro prieps fnam=radshow fil=99
*
  for/fil [fil] [fnam].eps
  meta -[fil] -113
  mess '*** Creating eps-file: '//[fnam]//'.eps'
*  for/fil [fil] [fnam].ps
*  meta -[fil] -115
*  mess '*** Creating ps-file: '//[fnam]//'.ps'
  pi/pl ' '
  meta 0
  for/clo [fil]
return
*
macro paramline xp=0.05 yp=0.96
 ttemp   = temp(1)
 tssse   = ssse(1)
 teepr   = eepr(1)
 tmomb   = momb(1)
 tenb    = enb(1)
 tfreeN  = freeN(1) 
 tfreeD  = freeD(1) 
 tclustP = clustP(1)
 trMed   = rMed(1)
 tsolA   = solA(1)
 txtm = 't='//[ttemp]//' ss='//[tssse]//' eep='//[teepr]//' p='//[tmomb]_
//' e='//[tenb]//' fN='//[tfreeN]//' fD='//[tfreeD]//' cP='//[tclustP]_
//' rM='//[trMed]//' sA='//[tsolA]
*** exec ~/PTOOL/snotes [xp] [yp] [txtm] 0. 0.25 40 0
return
*
macro plotCm vCm=pCm mk=29 m=939.567 siz=0.08
 iCm = [vCm](1)
 jCm = [vCm](2)
 nCm = $sigma([jCm]-[iCm]+1)
 ve/copy EkinCm([iCm]:[jCm]) xwork
 ve/copy  [vCm]([iCm]:[jCm]) ywork
 ve/copy $sigma(10.**(EkinCm(1)/EkinCm(2)*ywork-4.)) cswork
 set lwid 1.
 ve/copy $sigma(sqrt(xwork*(2.*[m]+xwork))) wp
 h/errors $sigma(0.5*(xwork+wp)) $sigma(cswork/wp) _
          ? $sigma(0.07*cswork/wp) [nCm] [mk] [siz] 0
 if [vCm] = 'He4Cm' then
   ve/copy  $sigma(0.5*(xwork+wp)) kHe4Cm
   ve/copy  $sigma(cswork/wp)      sHe4Cm
   ve/copy  $sigma(0.07*cswork/wp) dHe4Cm
 endif
 ve/copy $sigma(cswork) Mcw
 ve/copy xwork Mxw
 exec aven Mxw Mcw [nCm]
 avT = [@]
 ve/del xwork,ywork,cswork,Mxw,Mcw,wp
 exitm [avT]
return
*
macro aven vtMeV=tn csMeV=scn n=30 
 n1 = [n] - 1
 ve/copy $sigma(diff([vtMeV])) df[vtMeV]
 ve/copy [vtMeV] bf[vtMeV]
 ve/copy [vtMeV](2:[n]) bf[vtMeV](1:[n1])
 ve/copy $sigma(0.5*([vtMeV]+bf[vtMeV])) bf[vtMeV]
 ve/copy [csMeV] bf[csMeV]
 ve/copy [csMeV](2:[n]) bf[csMeV](1:[n1])
 ve/copy $sigma(0.5*([csMeV]+bf[csMeV])) bf[csMeV]
 ve/copy $sigma(bf[csMeV]*df[vtMeV]*bf[vtMeV]) t[csMeV]
 ve/copy t[csMeV](1:[n1]) tot[csMeV]
 sum = $sigma(vsum(tot[csMeV]))
 ve/del df[vtMeV],bf[vtMeV],bf[csMeV],t[csMeV],tot[csMeV]
 EXITM   [sum]
return
*
macro maven id=66 nbin=30
 ve/cr mavlt([nbin]) r  
 ve/cr mavs([nbin]) r  
 get/abs  [id] mavlt
 get/cont [id] mavs
 ve/copy $sigma(10.**mavlt) mavt
 exec aven mavt mavs [nbin]
 sum = [@]
 ve/del mavlt,mavt,mavs
 EXITM   [sum]
return
*
macro makehbk
 ve/cr nevts(1) r
 ve/read nevts histnevt.out
 1d 1 'N events' 1 0. 2. 0.
 put/cont 1 nevts
 hi/fil 35 chips.hbook ! n
 nt/create 20 'Incl' 43 //lun35 8096 _
  Nevt  MtotD MtotR  Mprot Mneut Mdeut Mtrit MHe3  MHe4  Mgam  _
  Mpim  Mpip  Mpi0   MKp   MK0   MKm   MaK0  Meta  Metap Mrhom _
  Mrhop Mrho0 Momega Mphi  MKS0  MKSC  MaKS0 MaKSC Mf2   Ma2m  _
  Ma2p  Ma20  Mf2p   ND    PDG   NS    NZ    NN    m     Px    _
  Py    Pz    E
 nt/read 20 tuplincl.out ! ! 9000000
 nt/create 22 '3pi' 40 //lun35 8096 _
  Nevt  MtotD MtotR  Mprot Mneut Mdeut Mtrit MHe3  MHe4  Mgam  _
  Mpim  Mpip  Mpi0   MKp   MK0   MKm   MaK0  Meta  Metap Mrhom _
  Mrhop Mrho0 Momega Mphi  MKS0  MKSC  MaKS0 MaKSC Mf2   Ma2m  _
  Ma2p  Ma20  Mf2p   m3pi  m12   m13   m23   pdg1  pdg2  pdg3
 nt/read 22 tuple3pi.out ! ! 9000000
 nt/create 25 'EvtA' 33 //lun35 8096 _
  Nevt  MtotD MtotR  Mprot Mneut Mdeut Mtrit MHe3  MHe4  Mgam  _
  Mpim  Mpip  Mpi0   MKp   MK0   MKm   MaK0  Meta  Metap Mrhom _
  Mrhop Mrho0 Momega Mphi  MKS0  MKSC  MaKS0 MaKSC Mf2   Ma2m  _
  Ma2p  Ma20  Mf2p
 nt/read 25 tuplevta.out ! ! 9000000
 nt/create 27 'EvtQ' 33 //lun35 8096 _
  Nevt  MtotD MtotR  Mprot Mneut Mdeut Mtrit MHe3  MHe4  Mgam  _
  Mpim  Mpip  Mpi0   MKp   MK0   MKm   MaK0  Meta  Metap Mrhom _
  Mrhop Mrho0 Momega Mphi  MKS0  MKSC  MaKS0 MaKSC Mf2   Ma2m  _
  Ma2p  Ma20  Mf2p
 nt/read 27 tuplevtq.out ! ! 9000000
 hrout *
 clo 35
 ve/del nevts
 hi/del *
return
