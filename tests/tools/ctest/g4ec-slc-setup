#!/usr/bin/env bash

# common setup of environment.

if [ $# -ne 2 ] ; then
   echo "Error, wrong number of arguments"
   echo " arguments lcgplatform, e.g x86_64-slc5 and compiler version, e.g 4.3"
   exit 1
else
   lcgbase=$1
	shift
   gccver=$1
	shift        # do not leave args, these will be taken if we source compiler setup
fi

IsNotInPath() {
  package=$1
  rc=`echo ${PATH} | grep  $package | wc -l`
  return $rc
}


lcg="${lcgbase}-gcc`echo ${gccver} | awk -F. '{ printf"%d%d",$1,$2 }'`"
lcgopt="${lcg}-opt" 

lcgext="/afs/cern.ch/sw/lcg/external"
lcgrel="/afs/cern.ch/sw/lcg/releases"
lcgapp="/afs/cern.ch/sw/lcg/app/releases"
lcgcontrib="/afs/cern.ch/sw/lcg/contrib"
lcgexperim="/afs/cern.ch/sw/lcg/experimental"
g4lcgapp="/afs/cern.ch/sw/lcg/app/releases/GEANT4"

[ -z ${rootlcg} ] && rootlcg=${lcgopt}
whichXercesC()
{
   version=$1;
	shift;
	for place in "$@"; do 
	   if [ -d ${place}/XercesC/${version}/${lcgopt} ] ; then
		   XercesC_dir=${place}/XercesC/${version}/${lcgopt}
			break
		fi
	done		
}

#---Xerces-C-------------------------------------------------------
if [ -z "${XERCESC_ROOT_DIR}" ] ; then
  [ -z "${XERCESC_VERSION}" ] && XERCESC_VERSION=3.1.1p2 || true
  if [ -z "${XercesC_dir}" -o ! -d "$XercesC_dir" ] ; then
     whichXercesC ${XERCESC_VERSION} ${g4lcgapp} ${lcgext} ${lcgexperim}
  fi
  if [ -z "${XercesC_dir}" -o ! -d "$XercesC_dir" ] ; then
     XERCESC_VERSION=3.1.1p2
     whichXercesC ${XERCESC_VERSION} ${lcgext} ${lcgexperim} ${g4lcgapp}
  fi
  if [ -n "$XercesC_dir" -a -d "$XercesC_dir" ] ; then
    export XERCESC_ROOT_DIR=${XercesC_dir}
    export LD_LIBRARY_PATH=${XercesC_dir}/lib:${LD_LIBRARY_PATH}
    echo "Using XercesC from $XercesC_dir"
  else
    echo "XercesC not found, XercesC_dir=${XercesC_dir:-Null}"
  fi
  unset XercesC_dir
fi

#---Inventor--------------------------------------------------------
if  IsNotInPath coin3d ; then
  Inventor=${lcgext}/coin3d/3.1.3.p1/${lcgopt}
  if [ -d $Inventor ] ; then 
    export PATH=${Inventor}/bin:${PATH}
    export LD_LIBRARY_PATH=${lcgext}/lib:${LD_LIBRARY_PATH}
    echo "Using Inventor in $Inventor"
  fi
  unset Inventor  
fi

#---CLHEP----------------------------------------------------------
if [ -z "${CLHEP_ROOT_DIR}" ] ; then
  CLHEP_ROOT_DIR=${lcgext}/clhep/2.2.0.4/${lcgopt}
fi  
if [ ${CLHEP_ROOT_DIR} != "-" -a -d ${CLHEP_ROOT_DIR} ] ; then
  export CLHEP_ROOT_DIR
  export LD_LIBRARY_PATH=${CLHEP_ROOT_DIR}/lib:${LD_LIBRARY_PATH}
  Use_CLHEP="-DGEANT4_USE_SYSTEM_CLHEP=ON\;-DCLHEP_ROOT_DIR=${CLHEP_ROOT_DIR}"
  echo "Using system CLHEP from ${CLHEP_ROOT_DIR}"
else
  unset CLHEP_ROOT_DIR
  Use_CLHEP="-DGEANT4_USE_SYSTEM_CLHEP=OFF"
  echo "Using internal CLHEP"
fi

whichQT()
{
	QTDIR=`ls -td ${lcgext}/qt/${1}*/${lcgopt} 2>/dev/null | head -1 `
	[ -z "${QTDIR}" ] && QTDIR=`ls -td ${lcgrel}/qt/${1}*/${lcgopt} 2>/dev/null | head -1` \
	                  || true
}

#---Qt-------------------------------------------------------------
# check for version of qt, skip system provided qt3, 
if [ -n "${QTDIR}" -a "${QTDIR}" != "-" ] ; then
   qtversion=0
	[ -x ${QTDIR}/bin/qmake ] && qtversion=`${QTDIR}/bin/qmake  -query QT_VERSION | awk -F\. '{ print $1 }'`
	#echo "qt is ${qtversion}"
	case ${qtversion} in
	  4) true
	     ;;
	  *) QTDIR=''
		  ;;
	esac								  
fi 
if [ -z "${QTDIR}" ] ; then
   whichQT 4
fi	
if [ -n "${QTDIR}" -a "${QTDIR}" != "-" -a -d "${QTDIR}" ] ; then
  Use_QT="ON" 
  export QTDIR
  echo "Using QT from ${QTDIR}"
else
  Use_QT="OFF"
  unset QTDIR
  echo "Not using QT"
fi

#---CMake----------------------------------------------------------
#---if  IsNotInPath CMake ; then
#   export PATH=${lcgcontrib}/CMake/3.3.2/Linux-x86_64/bin:${PATH}
   export PATH=${lcgcontrib}/CMake/2.8.9/Linux-i386/bin:${PATH}
#---fi

#---Valgrind----------------------------------------------------------
valgrind=`ls -1t ${lcgrel}/valgrind/*/${lcgopt}/bin/valgrind 2>/dev/null | head -1`

if [ -n "$valgrind" ] ; then
   vg_dir=`dirname $valgrind`
	echo "Using valgrind from $vg_dir"
   export PATH=${PATH}:${vg_dir}
	export VALGRIND_LIB=`echo ${valgrind} | sed -e 's=/bin/valgrind=/lib/valgrind='`
	echo "  and VALGRIND_LIB = $VALGRIND_LIB"
fi 
#----------------------------------------------------------------------

whichroot()
{
     v_root=`ls -dt1 ${1}/ROOT/${2}.[0-9][0-9]/${rootlcg} 2>/dev/null | head -1`
	  v_root=`echo $v_root | sed -e "s=${1}/ROOT/==" | sed -e "s=/${rootlcg}=="`
     # structure differs between lcg/app and lcg/experimental
     root=${1}/ROOT/${v_root}/${rootlcg}/root/bin/thisroot.sh
	  [ -r ${root} ] && true || root=${1}/ROOT/${v_root}/${rootlcg}/bin/thisroot.sh
}

#---ROOT-----------------------------------------------------------
if [ -z "${ROOTSYS}" ] ; then
  #  find latest root
     whichroot ${lcgapp}     5.34
  if [ ! -r ${root} ] ; then
     whichroot ${lcgexperim} 5.34
  fi	  
  if [ -r ${root} ] ; then
    echo "Setting up root using $root"
    . ${root}
  else
    echo no such root setup script: ${root}
  fi
   unset root
fi

#---Python--------------------------------------------------------
#Needed for PhysicsChecks: python compatible with ROOT
if  IsNotInPath Python ; then
  pythonDir=${lcgext}/Python/2.6.5p2/${rootlcg}/bin
  if [ -d ${pythonDir} ] ; then
    export PATH=${lcgext}/Python/2.6.5p2/${rootlcg}/bin:${PATH}
    export LD_LIBRARY_PATH=${lcgext}/Python/2.6.5p2/${rootlcg}/lib:${LD_LIBRARY_PATH}
  fi
  unset pythonDir
fi
#-----------------------------------------------------------------

#---Compiler------------------------------------------------------
if [ -z "${CXX}" ] ; then
  if IsNotInPath "gcc/$gccver" ; then
    gcc_dir=${lcgcontrib}/gcc/${gccver}/${lcgbase}
	 [ -d $gcc_dir ] && true ||  gcc_dir=${lcgcontrib}/gcc/${gccver}/${lcgopt}  
    echo Try gcc from $gcc_dir
    if [ -d $gcc_dir ] ; then
      #export PATH=${gcc_dir}/bin:${PATH}
      #export LD_LIBRARY_PATH=${gcc_dir}/lib64:${LD_LIBRARY_PATH}
      . $gcc_dir/setup.sh
      echo "Using g++ from $gcc_dir"
    fi 
    unset gcc_dir    
  fi
  export CXX=`which g++`
  export CC=`which gcc`
fi
echo "Using g++:  $CXX"
$CXX --version | head -1


# Common environment settings, options,...
CtestDir=$(dirname $0)

. ${CtestDir}/g4-unix-common
