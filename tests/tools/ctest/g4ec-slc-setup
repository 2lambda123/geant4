#!/usr/bin/env bash 

# common setup of environment.

if [ $# -ne 2 ] ; then
   echo "Error, wrong number of arguments"
   echo " arguments lcgplatform, e.g x86_64-slc5 and compiler version, e.g 4.3"
   exit 1
else
   lcgbase=$1
	shift
   gccver=$1
	shift        # do not leave args, these will be taken if we source compiler setup
fi

IsNotInPath() {
  package=$1
  rc=`echo ${PATH} | grep  $package | wc -l`
  return $rc
}


lcg="${lcgbase}-gcc`echo ${gccver} | awk -F. '{ printf"%d%d",$1,$2 }'`"
lcgopt="${lcg}-opt" 

lcgext="/afs/cern.ch/sw/lcg/external"
lcgapp="/afs/cern.ch/sw/lcg/app/releases"
lcgcontrib="/afs/cern.ch/sw/lcg/contrib"
lcgexperim="/afs/cern.ch/sw/lcg/experimental"

[ -z ${rootlcg} ] && rootlcg=${lcgopt}

#---Xerces-C-------------------------------------------------------
if [ -z "${XERCESC_ROOT_DIR}" ] ; then
  [ -z "${XERCESC_VERSION}" ] && XERCESC_VERSION=3.1.1p2 || true
  [ -z "${XercesC_dir}" ] && XercesC_dir=${lcgext}/XercesC/${XERCESC_VERSION}/${lcgopt}
  if [ ! -d $XercesC_dir -a \
       -d ${lcgexperim}/XercesC/${XERCESC_VERSION}/${lcgopt} ] ; then
	 XercesC_dir=${lcgexperim}/XercesC/${XERCESC_VERSION}/${lcgopt} 
  fi
  if [ -d $XercesC_dir ] ; then
    export XERCESC_ROOT_DIR=${XercesC_dir}
    export LD_LIBRARY_PATH=${XercesC_dir}/lib:${LD_LIBRARY_PATH}
    echo "Using XercesC from $XercesC_dir"
  else
    echo "XercesC not found in $XercesC_dir"
  fi
  unset XercesC_dir
fi

#---Inventor--------------------------------------------------------
if  IsNotInPath coin3d ; then
  Inventor=${lcgext}/coin3d/3.1.3.p1/${lcgopt}
  if [ -d $Inventor ] ; then 
    export PATH=${Inventor}/bin:${PATH}
    export LD_LIBRARY_PATH=${lcgext}/lib:${LD_LIBRARY_PATH}
    echo "Using Inventor in $Inventor"
  fi
  unset Inventor  
fi

#---CLHEP----------------------------------------------------------
if [ -z "${CLHEP_ROOT_DIR}" ] ; then
  CLHEP_ROOT_DIR=${lcgext}/clhep/2.2.0.4/${lcgopt}
  if [ -d ${CLHEP_ROOT_DIR} ] ; then
    export CLHEP_ROOT_DIR
    export LD_LIBRARY_PATH=${CLHEP_ROOT_DIR}/lib:${LD_LIBRARY_PATH}
    Use_CLHEP="-DGEANT4_USE_SYSTEM_CLHEP=ON\;-DCLHEP_ROOT_DIR=${CLHEP_ROOT_DIR}"
    echo "Using system CLHEP from ${CLHEP_ROOT_DIR}"
  else
    unset CLHEP_ROOT_DIR
    Use_CLHEP="-DGEANT4_USE_SYSTEM_CLHEP=OFF"
    echo "Using internal CLHEP"
  fi
fi
whichQT()
{
	QTDIR=`ls -td ${lcgext}/qt/${1}*/${lcgopt} | head -1`
}
#---Qt-------------------------------------------------------------
if [ -z "${QTDIR}" ] ; then
   whichQT 4
   if [ -n "${QTDIR}" -a -d ${QTDIR} ] ; then
     Use_QT="ON" 
     export QTDIR
     echo "Using QT from ${QTDIR}"
   else
     Use_QT="OFF"
     unset QTDIR
     echo "Not using QT"
   fi
else
   echo "Using QT from ${QTDIR}"
fi

#---CMake----------------------------------------------------------
#if  IsNotInPath CMake ; then
   export PATH=${lcgcontrib}/CMake/2.8.9/Linux-i386/bin:${PATH}
#fi

#---GCCXML--------------------------------------------------------
if  IsNotInPath  gccxml ; then
   gccxmlDir=${lcgext}/gccxml/0.9.0_20110825/${lcgopt}/bin
   if [ -d ${gccxmlDir} ] ; then 
     export PATH=${gccxmlDir}:${PATH}
   fi
   unset gccxmlDir 
fi


whichroot()
{
     v_root=`ls -dt1 ${1}/ROOT/${2}.[0-9][0-9]/${rootlcg} 2>/dev/null | head -1`
	  v_root=`echo $v_root | sed -e "s=${1}/ROOT/==" | sed -e "s=/${rootlcg}=="`
     # structure differs between lcg/app and lcg/experimental
     root=${1}/ROOT/${v_root}/${rootlcg}/root/bin/thisroot.sh
	  [ -r ${root} ] && true || root=${1}/ROOT/${v_root}/${rootlcg}/bin/thisroot.sh
}

#---ROOT-----------------------------------------------------------
if [ -z "${ROOTSYS}" ] ; then
  #  find latest root
     whichroot ${lcgapp}     5.34
  if [ ! -r ${root} ] ; then
     whichroot ${lcgexperim} 5.34
  fi	  
  if [ -r ${root} ] ; then
    echo "Setting up root using $root"
    . ${root}
  else
    echo no such root setup script: ${root}
  fi
   unset root
fi

#---Python--------------------------------------------------------
#Needed for PhysicsChecks: python compatible with ROOT
if  IsNotInPath Python ; then
  pythonDir=${lcgext}/Python/2.6.5p2/${rootlcg}/bin
  if [ -d ${pythonDir} ] ; then
    export PATH=${lcgext}/Python/2.6.5p2/${rootlcg}/bin:${PATH}
    export LD_LIBRARY_PATH=${lcgext}/Python/2.6.5p2/${rootlcg}/lib:${LD_LIBRARY_PATH}
  fi
  unset pythonDir
fi
#-----------------------------------------------------------------

#---Compiler------------------------------------------------------
if [ -z "${CXX}" ] ; then
  if IsNotInPath "gcc/$gccver" ; then
    gcc_dir=${lcgcontrib}/gcc/${gccver}/${lcgbase}
	 [ -d $gcc_dir ] && true ||  gcc_dir=${lcgcontrib}/gcc/${gccver}/${lcgopt}  
    echo Try gcc from $gcc_dir
    if [ -d $gcc_dir ] ; then
      #export PATH=${gcc_dir}/bin:${PATH}
      #export LD_LIBRARY_PATH=${gcc_dir}/lib64:${LD_LIBRARY_PATH}
      . $gcc_dir/setup.sh
      echo "Using g++ from $gcc_dir"
    fi 
    echo "Using g++:"
    g++ --version | head -1
    unset gcc_dir    
  fi
fi

#echo $PATH | wc -c

test -n "$VERSION_BENCHMARKS" && echo "Using benchmarks tag: $VERSION_BENCHMARKS"
 

if [ x$MODE = x ]; then
  export MODE=nightly
fi
if [ x$WORKDIR = x ]; then 
  WORKDIR=/ec/G4-builds
fi
if [ x$VERSION = x ]; then 
  export VERSION=g4tags-dev
fi

if [ x$BUILDTYPE = x ]; then
   PLATFORM=${WORKDIR}/${MODE}/${CONFIG}
else
   PLATFORM=${WORKDIR}/${MODE}/${CONFIG}-${BUILDTYPE}
fi

export SOURCE=${PLATFORM}/${VERSION}
export BINARY=${PLATFORM}/build


#
#default, to be modified for non default buildtypes
#
  export G4_XOPTS="-DGEANT4_USE_G3TOG4=ON;\
-DGEANT4_USE_OPENGL_X11=ON;\
-DGEANT4_USE_QT=${Use_QT};\
-DGEANT4_USE_RAYTRACER_X11=ON;\
${Use_CLHEP};\
-DGEANT4_USE_XM=ON"


case "${BUILDTYPE}" in 

   staticlibs)
	   export G4_XOPTS="-DBUILD_STATIC_LIBS=ON;-DBUILD_SHARED_LIBS=OFF"
	   ;;
   MT)
	   export G4_XOPTS="${G4_XOPTS};-DGEANT4_BUILD_MULTITHREADED=ON"
	   ;;
   MTmax)
	   export G4_XOPTS="${G4_XOPTS};-DGEANT4_BUILD_MULTITHREADED=ON"
	   export G4FORCENUMBEROFTHREADS="max"
	   ;;
esac

echo $G4_XOPTS

