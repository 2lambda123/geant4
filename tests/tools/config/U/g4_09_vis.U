?RCS:
?MAKE:g4vis_build_dawn_driver g4vis_use_dawn g4vis_build_dawnfile_driver g4vis_use_dawnfile g4vis_build_openglx_driver g4vis_use_openglx g4vis_build_openglxm_driver g4vis_use_openglxm g4vis_xmhome g4vis_build_oix_driver g4vis_use_oix g4vis_build_raytracer_driver g4vis_use_raytracer g4vis_build_vrml_driver g4vis_use_vrml g4vis_build_vrmlfile_driver g4vis_use_vrmlfile g4vis_build_asciitree_driver g4vis_use_asciitree g4vis_build_openglwin32_driver g4vis_use_openglwin32 g4vis_build_oiwin32_driver g4vis_use_oiwin32 g4vis_oivhome g4vis_oglhome g4vis_build_raytracerx_driver g4vis_use_raytracerx g4vis_xmflags g4vis_xmlibs:\
	g4ui_build_terminal_session g4ui_build_qt_session Myread Getfile cat rm test
?MAKE:	-pick add $@ %<
?S:g4osname:
?S:	This variable contains the value of the 'g4osname' symbol, which
?S:	used for building G4SYSTEM.
?S:.
?INIT:#INITIALIZE VIS DRIVER OPTIONS
?INIT:g4vis_none='n'
?INIT:g4vis_build_openglwin32_driver='n'
?INIT:g4vis_use_openglwin32='n'
?INIT:g4vis_build_oiwin32_driver='n'
?INIT:g4vis_use_oiwin32='n'
?INIT:g4vis_build_dawn_driver='n'
?INIT:g4vis_use_dawn='n'
?INIT:g4vis_build_dawnfile_driver='y'
?INIT:g4vis_use_dawnfile='y'
?INIT:g4vis_build_openglx_driver='n'
?INIT:g4vis_use_openglx='n'
?INIT:g4vis_build_openglxm_driver='n'
?INIT:g4vis_use_openglxm='n'
?INIT:g4vis_build_oix_driver='n'
?INIT:g4vis_use_oix='n'
?INIT:g4vis_build_raytracerx_driver='n'
?INIT:g4vis_use_raytracerx='n'
?INIT:g4vis_build_raytracer_driver='y'
?INIT:g4vis_use_raytracer='y'
?INIT:g4vis_build_vrml_driver='y'
?INIT:g4vis_use_vrml='y'
?INIT:g4vis_build_asciitree_driver='y'
?INIT:g4vis_use_asciitree='y'
?INIT:g4vis_build_gagtree_driver='y'
?INIT:g4vis_use_gagtree='y'

echo " "
echo "*OPTIONS FOR GEANT4 VISUALIZATION DRIVERS*"

g4message="Enable building of visualization drivers?"
dflt='y'
rp=$g4message
. ./myread
gans=$ans

	case $gans in
	
	n*|N*) 
		g4vis_none=y
		;;
	y*|Y*) 
		g4vis_none=n
		;;
	esac

case $g4vis_none in

n)

if test "X$g4system" != "XWIN32-VC" -a "X$g4system" != "XWIN32-VC7"; then

g4message="Enable building of the X11 OpenGL visualization driver?"

dflt=$g4vis_build_openglx_driver
rp=$g4message
. ./myread
gans=$ans

	case $gans in
	
	n*|N*) 
		g4vis_build_openglx_driver=n
		g4vis_use_openglx=n
		;;
	y*|Y*) 
		g4vis_build_openglx_driver=y
		g4vis_use_openglx=y
		;;
	esac

#############################################
g4message="Enable building of the X11-Motif OpenGL visualization driver?"

dflt=$g4vis_build_openglxm_driver
rp=$g4message
. ./myread
gans=$ans

	case $gans in
	
	n*|N*) 
		g4vis_build_openglxm_driver=n
		g4vis_use_openglxm=n
		;;
	y*|Y*) 
		g4vis_build_openglxm_driver=y
		g4vis_use_openglxm=y
		;;
	esac

############################################################
#echo xm_dirs=$xm_dirs
#echo g4vis_xmhome=$g4vis_xmhome
#echo g4ui_build_xm_session=$g4ui_build_xm_session
#echo g4vis_build_openglxm_driver=$g4vis_build_openglxm_driver

if test "X$g4ui_build_xm_session" = "Xn" ; then

#echo PASS1

if test "X$g4vis_build_openglxm_driver" = "Xy" ; then

#echo PASS2

if test "X$g4vis_xmhome" = "X" ; then
xm_dirs=`find $g4vis_xmhome /usr/X11R6/include /usr/local/include /usr/include /sw/include -type d -name Xm 2>/dev/null |xargs echo`
#echo ogl_dirs=$ogl_dirs

if test "X$xm_dirs" != "X" ; then

g4xm_base_dir_found=`echo $xm_dirs|cut -d" " -f1`
#echo g4ogl_base_dir_found=$g4ogl_base_dir_found

# That's right: should be twice! (e.g./usr/local/lib/libGLU.so -> /usr/local)
g4xm_base_dir_found=`dirname $g4xm_base_dir_found`
g4xm_base_dir_found=`dirname $g4xm_base_dir_found`

	g4vis_xmhome=$g4xm_base_dir_found
#else
#case "$g4vis_xmhome" in
#'')
#	g4vis_xmhome=/usr/X11R6/
#	;;
#esac
fi
fi

##########################################################################

#if test "X$g4vis_xmhome" != "X" ; then
#xm_dirs=$g4vis_xmhome
#fi

if test "X$g4vis_xmhome" != "X" ; then

g4message=`cat << EOM

You have selected to build the OpenGL-Motif(Xm) driver.
Specify the correct path where Xm is installed in your system.
It was found in $g4vis_xmhome. Press [Enter] to set this path or type the correct one.

You can set '-' (without quotation) to CANCEL the XM flag at all:

EOM`

dflt=$g4vis_xmhome
fn='d~(-)'
rp=$g4message
. ./getfile

cend="no"
while test "$cend" = "no" ; do
if test -e "$ans/include/Xm" || [ "X$ans" = "X-"  ]; then
cend="yes"
if test "X$ans" != "X-" ; then

g4vis_xmhome=$ans

else

g4vis_build_openglxm_driver=n
g4vis_use_openglxm=n
echo " "

fi
else

g4message=`cat << EOM

You have selected to build the OpenGL-Motif(Xm) driver.
But Xm was not found in $ans.
Please specify the correct path where Xm is installed in your system.

You can set '-' (without quotation) to CANCEL the XM flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile
fi
done

else

g4message=`cat << EOM

You have selected to build the OpenGL-Motif(Xm) driver.
But Xm was not found in expected place.
Please specify the correct path where Xm is installed in your system.

You can set '-' (without quotation) to CANCEL the XM flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile

cend="no"
while test "$cend" = "no" ; do
if test -e "$ans/include/Xm" || [ "X$ans" = "X-"  ]; then
cend="yes"
if test "X$ans" != "X-" ; then

g4vis_xmhome=$ans

else

g4vis_build_openglxm_driver=n
g4vis_use_openglxm=n
echo " "

fi
else

g4message=`cat << EOM

You have selected to build the OpenGL-Motif(Xm) driver.
But Xm was not found in $ans.
Please specify the correct path where Xm is installed in your system.

You can set '-' (without quotation) to CANCEL the XM flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile
fi
done
fi

if test "X$g4osname" = "XLinux"; then 

if test "X$g4vis_xmhome" = "X/usr" -o "X$g4vis_xmhome" = "X/usr/local" ; then
g4vis_xmhome=""
fi
fi
fi # g4vis_build_opheglxm_driver

###############################################
# Set XMFLAGS and XMLIBS
#

if test "X$g4vis_build_openglxm_driver" = "Xy" ; then

if test "X$g4osname" = "XAIX" ; then
g4vis_xmflags=" -I$g4vis_xmhome/include "
g4vis_xmlibs=" -L$g4vis_xmhome/lib -lXm -lXt -lX11 "
fi

if test "X$g4osname" = "XLinux" ; then
	if test "X$g4vis_xmhome" = "X" ; then
		g4vis_xmflags=""
	else
		g4vis_xmflags=" -I$g4vis_xmhome/include "
	fi

	if test "X$g4vis_xmhome" = "X/usr/X11R6" -o "X$g4vis_xmhome" = "X" ; then
		g4vis_xmlibs=" -lXm -lXpm "
	else
		if test -d "$g4vis_xmhome/lib64" ; then
			g4vis_xmlibs=" -L$g4vis_xmhome/lib64 -lXm -lXpm "
		else
			g4vis_xmlibs=" -L$g4vis_xmhome/lib -lXm -lXpm "
		fi
	fi
fi

if test "X$g4osname" = "XDarwin" ; then
g4vis_xmflags=" -I$g4vis_xmhome/include "
g4vis_xmlibs=" -L$g4vis_xmhome/lib -lXm -lXpm "
fi

if test "X$g4osname" = "XDEC" ; then
g4vis_xmflags=" -I$g4vis_xmhome/include "
g4vis_xmlibs=" -L$g4vis_xmhome/lib -lXm "
fi

if test "X$g4osname" = "XHP" ; then
g4vis_xmflags=" -I$g4vis_xmhome/include/Motif1.2 "
g4vis_xmlibs=" -L$g4vis_xmhome/lib/Motif1.2 -lXm "
fi

if test "X$g4osname" = "XSGI" ; then
g4vis_xmflags=" -I$g4vis_xmhome/include "
g4vis_xmlibs=" -L$g4vis_xmhome/lib -lXm "
fi

if test "X$g4osname" = "XSUN" ; then
g4vis_xmflags=" -I$g4vis_xmhome/include "
g4vis_xmlibs=" -L$g4vis_xmhome/lib -L/usr/openwin/lib -L/usr/dt/lib -L/usr/ucblib -R/usr/openwin/lib -lXt -lXm -lX11 "
fi

fi # end of XM build 
fi
###############################################

fi # if !WIN

######################################################################
if test "X$g4system" = "XWIN32-VC" -o "X$g4system" = "XWIN32-VC7"; then

g4message="Enable building of the WIN32 OpenGL visualization driver?"

dflt=$g4vis_build_openglwin32_driver
rp=$g4message
. ./myread
gans=$ans

	case $gans in
	
	n*|N*) 
		g4vis_build_openglwin32_driver=n
		g4vis_use_openglwin32=n
		;;
	y*|Y*) 
		g4vis_build_openglwin32_driver=y
		g4vis_use_openglwin32=y
		;;
	esac

fi # if WIN
###########################################

if test "X$g4system" != "XWIN32-VC" -a "X$g4system" != "XWIN32-VC7"; then

g4message="Enable building of the FukuiRenderer/DAWN visualization driver?"
dflt=$g4vis_build_dawn_driver
rp=$g4message
. ./myread
gans=$ans

	case $gans in
	
	n*|N*) 
		g4vis_build_dawn_driver=n
		g4vis_use_dawn=n
		;;
	y*|Y*) 
		g4vis_build_dawn_driver=y
		g4vis_use_dawn=y
		;;
	esac


#######################################
g4message="Enable building of the X11 OpenInventor visualization driver?"

dflt=$g4vis_build_oix_driver
rp=$g4message
. ./myread
gans=$ans

	case $gans in
	
	n*|N*) 
		g4vis_build_oix_driver=n
		g4vis_use_oix=n
		;;
	y*|Y*) 
		g4vis_build_oix_driver=y
		g4vis_use_oix=y
		;;
	esac

############################################################
if test "X$g4vis_build_oix_driver" = "Xy" ; then

oiv_dirs=`find $g4vis_oivhome /usr/X11R6/include /usr/local/include /usr/include  -type d -name Inventor 2>/dev/null|xargs echo`
#echo ogl_dirs=$ogl_dirs

if test "X$oiv_dirs" != "X" ; then

g4oiv_base_dir_found=`echo $oiv_dirs|cut -d" " -f1`
#echo g4ogl_base_dir_found=$g4ogl_base_dir_found

# That's right: should be twice! (e.g./usr/local/lib/libGLU.so -> /usr/local)
g4oiv_base_dir_found=`dirname $g4oiv_base_dir_found`
g4oiv_base_dir_found=`dirname $g4oiv_base_dir_found`

	g4vis_oivhome=$g4oiv_base_dir_found
#else
#case "$g4vis_oivhome" in
#'')
#	g4vis_oivhome=/usr
#	;;
#esac
fi

##########################################################################

#if test "X$g4vis_oivhome" != "X" ; then
#oiv_dirs=$g4vis_oivhome
#fi

if test "X$g4vis_oivhome" != "X" ; then

g4message=`cat << EOM

You have selected to build the X11 OpenInventor driver.
Specify the path where OpenInventor is installed on your system.
It was found in $g4vis_oivhome. Press [Enter] to set this path or type the correct one.

You can set '-' (without quotation) to CANCEL the OpenInventor flag at all:

EOM`

dflt=$g4vis_oivhome
fn='d~(-)'
rp=$g4message
. ./getfile

cend="no"
while test "$cend" = "no" ; do
if test -e "$ans/include/Inventor" || [ "X$ans" = "X-"  ]; then
cend="yes"
if test "X$ans" != "X-" ; then

g4vis_oivhome=$ans

else

g4vis_build_oix_driver=n
g4vis_use_oix=n
echo " "

fi
else

g4message=`cat << EOM

You have selected to build the X11 OpenInventor driver.
But OpenInventor was not found in $ans.
Please specify the correct path where OpenInventor is installed on your system.

You can set '-' (without quotation) to CANCEL the OpenInventor flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile
fi
done

else

g4message=`cat << EOM

You have selected to build the X11 OpenInventor driver.
But OpenInventor was not found in the expected place.
Please specify the correct path where OpenInventor is installed on your system.

You can set '-' (without quotation) to CANCEL the OpenInventor flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile

cend="no"
while test "$cend" = "no" ; do
if test -e "$ans/include/Inventor" || [ "X$ans" = "X-"  ]; then
cend="yes"
if test "X$ans" != "X-" ; then

g4vis_oivhome=$ans

else

g4vis_build_oix_driver=n
g4vis_use_oix=n
echo " "

fi
else

g4message=`cat << EOM

You have selected to build the X11 OpenInventor driver.
But OpenInventor was not found in $ans.
Please specify the correct path where OpenInventor is installed on your system.

You can set '-' (without quotation) to CANCEL the OpenInventor flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile
fi
done
fi

if test "X$g4osname" = "XLinux"; then 

if test "X$g4vis_oivhome" = "X/usr" -o "X$g4vis_oivhome" = "X/usr/local"; then
g4vis_oivhome=""
fi
fi
fi # g4vis_build_oix_driver

###############################################

g4message="Enable building of the X11 RayTracer visualization driver?"

dflt=$g4vis_build_raytracerx_driver
rp=$g4message
. ./myread
gans=$ans

	case $gans in
	
	n*|N*) 
		g4vis_build_raytracerx_driver=n
		g4vis_use_raytracerx=n
		;;
	y*|Y*) 
		g4vis_build_raytracerx_driver=y
		g4vis_use_raytracerx=y
		;;
	esac

########################################################
fi # if !WIN

###############################################################
if test "X$g4system" = "XWIN32-VC" -o "X$g4system" = "XWIN32-VC7"; then

g4message="Enable building of the WIN32 OpenInventor visualization driver?"

dflt=$g4vis_build_oiwin32_driver
rp=$g4message
. ./myread
gans=$ans

	case $gans in
	
	n*|N*) 
		g4vis_build_oiwin32_driver=n
		g4vis_use_oiwin32=n
		;;
	y*|Y*) 
		g4vis_build_oiwin32_driver=y
		g4vis_use_oiwin32=y
		;;
	esac

############################################################
if test "X$g4vis_build_oiwin32_driver" = "Xy" ; then

oiv_dirs=`find $g4vis_oivhome /usr/X11R6/include /usr/local/include /usr/include  -type d -name Inventor 2>/dev/null|xargs echo`
#echo ogl_dirs=$ogl_dirs

if test "X$oiv_dirs" != "X" ; then

g4oiv_base_dir_found=`echo $oiv_dirs|cut -d" " -f1`
#echo g4ogl_base_dir_found=$g4ogl_base_dir_found

# That's right: should be twice! (e.g./usr/local/lib/libGLU.so -> /usr/local)
g4oiv_base_dir_found=`dirname $g4oiv_base_dir_found`
g4oiv_base_dir_found=`dirname $g4oiv_base_dir_found`

	g4vis_oivhome=$g4oiv_base_dir_found
#else
#case "$g4vis_oivhome" in
#'')
#	g4vis_oivhome=/usr
#	;;
#esac
fi

##########################################################################

#if test "X$g4vis_oivhome" != "X" ; then
#oiv_dirs=$g4vis_oivhome
#fi

if test "X$g4vis_oivhome" != "X" ; then

g4message=`cat << EOM

You have selected to build the WIN32 OpenInventor driver.
Specify the correct path where OpenInventor is installed on your system.
It was found in $g4vis_oivhome. Press [Enter] to set this path or type the correct one.

You can set '-' (without quotation) to CANCEL the OpenInventor flag at all:

EOM`

dflt=$g4vis_oivhome
fn='d~(-)'
rp=$g4message
. ./getfile

cend="no"
while test "$cend" = "no" ; do
if test -e "$ans/include/Inventor" || [ "X$ans" = "X-"  ]; then
cend="yes"
if test "X$ans" != "X-" ; then

g4vis_oivhome=$ans

else

g4vis_build_oiwin32_driver=n
g4vis_use_oiwin32=n
echo " "

fi
else

g4message=`cat << EOM

You have selected to build the WIN32 OpenInventor driver.
But OpenInventor was not found in $ans.
Please specify the correct path where OpenInventor is installed on your system.

You can set '-' (without quotation) to CANCEL the OpenInventor flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile
fi
done

else

g4message=`cat << EOM

You have selected to build the WIN32 OpenInventor driver.
But OpenInventor was not found in expected place.
Please specify the correct path where OpenInventor is installed on your system.

You can set '-' (without quotation) to CANCEL the OpenInventor flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile

cend="no"
while test "$cend" = "no" ; do
if test -e "$ans/include/Inventor" || [ "X$ans" = "X-"  ]; then
cend="yes"
if test "X$ans" != "X-" ; then

g4vis_oivhome=$ans

else

g4vis_build_oiwin32_driver=n
g4vis_use_oiwin32=n
echo " "

fi
else

g4message=`cat << EOM

You have selected to build the WIN32 OpenInventor driver.
But OpenInventor was not found in $ans.
Please specify the correct path where OpenInventor is installed on your system.

You can set '-' (without quotation) to CANCEL the OpenInventor flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile
fi
done
fi

if test "X$g4osname" = "XLinux"; then 

if test "X$g4vis_oivhome" = "X/usr" -o "X$g4vis_oivhome" = "X/usr/local"; then
g4vis_oivhome=""
fi
fi
fi # g4vis_build_oiwin32_driver

###############################################

fi # if WIN
################################################################

if test "X$g4system" != "XWIN32-VC" -a "X$g4system" != "XWIN32-VC7"; then

g4message=`cat << EOM

  G4VIS_BUILD_DAWNFILE_DRIVER
  G4VIS_USE_DAWNFILE

DAWN drivers are interfaces to Fukui Renderer DAWN. It is a vectorized 3D 
PostScript processor, and so well suited to prepare technical high
quality outputs for presentation and/or documentation. 
The DAWNFILE driver sends 3D data to DAWN via an intermediate file, 
named g4.prim in the current directory. The file g4.prim is able to 
be re-visualized later without the help of Geant4. 
EOM`

dflt=$g4vis_use_dawnfile
rp=$g4message
#. ./myread
#gans=$ans
gans=y

	case $gans in
	
	n*|N*) 
		g4vis_build_dawnfile_driver=n
		g4vis_use_dawnfile=n
		;;
	y*|Y*) 
		g4vis_build_dawnfile_driver=y
		g4vis_use_dawnfile=y
		;;
	esac

g4message=`cat << EOM

  G4VIS_BUILD_RAYTRACER_DRIVER
  G4VIS_USE_RAYTRACER

It performs ray-tracing visualization using the tracking routines of Geant4. 
It is, therefore, available for debugging tracking routines. 
It is well suited for photo-realistic high quality output for 
presentation, and for intuitive debugging of detector geometry. 
EOM`

dflt=$g4vis_use_raytracer
rp=$g4message
#. ./myread
#gans=$ans
gans=y

	case $gans in
	
	n*|N*) 
		g4vis_build_raytracer_driver=n
		g4vis_use_raytracer=n
		;;
	y*|Y*) 
		g4vis_build_raytracer_driver=y
		g4vis_use_raytracer=y
		;;
	esac

g4message="Enable building of the VRML visualization driver?"

dflt=$g4vis_build_vrml_driver
rp=$g4message
. ./myread
gans=$ans

	case $gans in
	
	n*|N*) 
		g4vis_build_vrml_driver=n
		g4vis_use_vrml=n
		;;
	y*|Y*) 
		g4vis_build_vrml_driver=y
		g4vis_use_vrml=y
		;;
	esac

g4message=`cat << EOM

  G4VIS_BUILD_VRMLFILE_DRIVER
  G4VIS_USE_VRMLFILE

This driver generates VRML files, which describe 3D scenes to be 
visualized with a proper VRML viewer, at either a local or a remote host. 
The VRMLFILE driver sends 3D data to your VRML viewer, which is running 
in the same host machine as Geant4, via an intermediate file named 
g4.wrl created in the current directory. This file is available for 
re-visualization afterwards. In visualization, you should specify a 
name of the VRML viewer by setting the environment variable G4VRML_VIEWER 
beforehand.
EOM`

dflt=$g4vis_use_vrmlfile
rp=$g4message
#. ./myread
#gans=$ans
gans=y

	case $gans in
	
	n*|N*) 
		g4vis_build_vrmlfile_driver=n
		g4vis_use_vrmlfile=n
		;;
	y*|Y*) 
		g4vis_build_vrmlfile_driver=y
		g4vis_use_vrmlfile=y
		;;
	esac

fi # if !WIN

g4message=`cat << EOM

  G4VIS_BUILD_ASCIITREE_DRIVER
  G4VIS_USE_ASCIITREE

Description????????????????????????
EOM`

dflt=$g4vis_use_asciitree
rp=$g4message
# Don't ask by default and set to 'y'!
#. ./myread
#gans=$ans
gans=y

	case $gans in
	
	n*|N*) 
		g4vis_build_asciitree_driver=n
		g4vis_use_asciitree=n
		;;
	y*|Y*) 
		g4vis_build_asciitree_driver=y
		g4vis_use_asciitree=y
		;;
	esac


g4message=`cat << EOM

  G4VIS_BUILD_GAGTREE_DRIVER
  G4VIS_USE_GAGTREE

Description????????????????????????
EOM`

dflt=$g4vis_use_gagtree
rp=$g4message
# Don't ask by default and set to 'y'!
#. ./myread
#gans=$ans
gans=y

	case $gans in
	
	n*|N*) 
		g4vis_build_gagtree_driver=n
		g4vis_use_gagtree=n
		;;
	y*|Y*) 
		g4vis_build_gagtree_driver=y
		g4vis_use_gagtree=y
		;;
	esac

;;
esac

if test "X$g4system" != "XWIN32-VC" -a "X$g4system" != "XWIN32-VC7" -a "X$g4system" != "XDarwin-g++"; then

#echo PASS1

if [ X$g4vis_build_openglx_driver = Xy ] || [ X$g4vis_build_openglxm_driver = Xy ] || [ X$g4vis_build_openglwin32_driver = Xy ] ; then 

#echo PASS2

#####################################################################
ogl_dirs=`find $g4vis_oglhome /usr/X11R6/include /usr/local/include /usr/include -type d -name GL 2>/dev/null|xargs echo`
#echo ogl_dirs=$ogl_dirs

if test "X$ogl_dirs" != "X" ; then

g4ogl_base_dir_found=`echo $ogl_dirs|cut -d" " -f1`
#echo g4ogl_base_dir_found=$g4ogl_base_dir_found

# That's right: should be twice! (e.g./usr/local/lib/libGLU.so -> /usr/local)
g4ogl_base_dir_found=`dirname $g4ogl_base_dir_found`
g4ogl_base_dir_found=`dirname $g4ogl_base_dir_found`

	g4vis_oglhome=$g4ogl_base_dir_found
#else
#case "$g4vis_oglhome" in
#'')
#	g4vis_oglhome=/usr
#	;;
#esac
fi

##########################################################################
if test "X$g4vis_oglhome" != "X" ; then
ogl_dirs=$g4vis_oglhome
fi

if test "X$ogl_dirs" != "X" ; then

g4message=`cat << EOM

You have selected to build one or more drivers that require OpenGL.
Specify the correct path (OGLHOME) where OpenGL is installed on your system.
It was found in $g4vis_oglhome. Press [Enter] to set this path or type the correct one.

You can set '-' (without quotation) to CANCEL the OpenGL flag at all:

EOM`

dflt=$g4vis_oglhome
fn='d~(-)'
rp=$g4message
. ./getfile

cend="no"
while test "$cend" = "no" ; do
if test -e "$ans/include/GL" || [ "X$ans" = "X-"  ]; then
cend="yes"

if test "X$ans" != "X-" ; then

g4vis_oglhome=$ans

else

g4vis_build_openglx_driver=n
g4vis_use_openglx=n

g4vis_build_openglxm_driver=n
g4vis_use_openglxm=n

g4vis_build_openglwin32_driver=n
g4vis_use_openglwin32=n
echo " "

fi
else

g4message=`cat << EOM

You have selected to build one or more drivers that require OpenGL.
But OpenGL was not found in $ans.
Please specify the correct path where OpenGL is installed on your system.

You can set '-' (without quotation) to CANCEL the OpenGL flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile
fi
done

else

g4message=`cat << EOM

You have selected to build one or more drivers that require OpenGL.
But OpenGL was not found in the expected place.
Please specify the correct path where OpenGL is installed on your system.

You can set '-' (without quotation) to CANCEL the OpenGL flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile

cend="no"
while test "$cend" = "no" ; do
if test -e "$ans/include/GL" || [ "X$ans" = "X-"  ]; then
cend="yes"

if test "X$ans" != "X-" ; then

g4vis_oglhome=$ans

else

g4vis_build_openglx_driver=n
g4vis_use_openglx=n

g4vis_build_openglxm_driver=n
g4vis_use_openglxm=n

g4vis_build_openglwin32_driver=n
g4vis_use_openglwin32=n
echo " "

fi
else

g4message=`cat << EOM

You have selected to build one or more drivers that require OpenGL.
But OpenGL was not found in $ans.
Please specify the correct path where OpenGL is installed on your system.

You can set '-' (without quotation) to CANCEL the OpenGL flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile
fi
done

fi

if test "X$g4osname" = "XLinux"; then 

if test "X$g4vis_oglhome" = "X/usr" -o "X$g4vis_oglhome" = "X/usr/local"; then
g4vis_oglhome=""
fi

fi # if platform (Linux vs SUN)

fi # if need
###########################################
fi # if platform (Unix vs Win)
