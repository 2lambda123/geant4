?RCS:
?MAKE:g4ui_none \
g4ui_build_terminal_session \
g4ui_use_terminal \
g4ui_build_gag_session \
g4ui_use_gag \
g4ui_build_xm_session \
g4ui_use_xm \
g4ui_build_xaw_session \
g4ui_use_xaw \
g4ui_build_win32_session \
g4ui_use_win32 \
g4ui_use_tcsh \
g4vis_xmhome \
g4vis_xmflags \
g4vis_xmlibs \
g4ui_xawhome \
g4ui_xawflags \
g4ui_xawlibs:\
	g4lib_build_shared g4debug Myread Getfile cat rm test
?MAKE:	-pick add $@ %<
?S:g4osname:
?S:	This variable contains the value of the 'g4osname' symbol, which
?S:	used for building G4SYSTEM.
?S:.
?S:g4ui_build_qt_session:
?S:	This variable determines whether the Qt UI will be built 
?S:.
?S:g4ui_use_qt:
?S:	This variable determines whether the Qt UI will be used.
?S:.
?S:g4_qthome:
?S:	This variable holds the path to the Qt installation
?S:.
?INIT:#INITIALIZE QT UI OPTIONS
?INIT:g4ui_none='n'
?INIT:g4ui_build_terminal_session='y'
?INIT:g4ui_use_terminal='y'
?INIT:g4ui_build_gag_session='y'
?INIT:g4ui_use_gag='y'
?INIT:g4ui_build_xm_session='n'
?INIT:g4ui_use_xm='n'
?INIT:g4ui_build_xaw_session='n'
?INIT:g4ui_use_xaw='n'
?INIT:g4ui_build_win32_session='n'
?INIT:g4ui_use_win32='n'
?INIT:g4ui_use_tcsh='y'

echo " "
echo "*OPTIONS FOR GEANT4 USER INTERFACE MODULES*"

g4message="Enable building of User Interface (UI) modules?"

dflt='y'
rp=$g4message
. ./myread
gans=$ans

	case $gans in
	
	n*|N*) 
		g4ui_none=y
		;;
	y*|Y*) 
		g4ui_none=n
		;;
	esac

case $g4ui_none in

n)

if test "X$g4system" != "XWIN32-VC" -a "X$g4system" != "XWIN32-VC7"; then

g4message="Enable building of the XAW (X11 Athena Widget set) UI module?"

dflt=$g4ui_build_xaw_session
rp=$g4message
. ./myread
gans=$ans

	case $gans in
	
	n*|N*) 
		g4ui_build_xaw_session=n
		g4ui_use_xaw=n
		;;
	y*|Y*) 
		g4ui_build_xaw_session=y
		g4ui_use_xaw=y
		;;
	esac

############################################################
############################################################

if test "X$g4ui_build_xaw_session" = "Xy" ; then

if test "X$g4ui_xawhome" = "X" ; then
xaw_dirs=`find $g4ui_xawhome /usr/X11R6/include /usr/local/include /usr/include /sw/include -type d -name Xaw 2>/dev/null |xargs echo`
#echo ogl_dirs=$ogl_dirs

if test "X$xaw_dirs" != "X" ; then

g4xaw_base_dir_found=`echo $xaw_dirs|cut -d" " -f1`
#echo g4ogl_base_dir_found=$g4ogl_base_dir_found

# That's right: should be 3 times! (e.g./usr/local/lib/libGLU.so -> /usr/local)
g4xaw_base_dir_found=`dirname $g4xaw_base_dir_found`
g4xaw_base_dir_found=`dirname $g4xaw_base_dir_found`
g4xaw_base_dir_found=`dirname $g4xaw_base_dir_found`

	g4ui_xawhome=$g4xaw_base_dir_found
#else
#case "$g4ui_xawhome" in
#'')
#	g4ui_xawhome=/usr/X11R6/
#	;;
#esac
fi
fi

##########################################################################

#if test "X$g4ui_xawhome" != "X" ; then
#xaw_dirs=$g4ui_xawhome
#fi

if test "X$g4ui_xawhome" != "X" ; then

g4message=`cat << EOM

You have selected to build the XAW based user interfaces.
Specify the correct path where XAW is installed on your system.
It was found in $g4ui_xawhome. Press [Enter] to set this path or type the correct one.

You can set '-' (without quotation) to CANCEL the XAW flag at all:

EOM`

dflt=$g4ui_xawhome
fn='d~(-)'
rp=$g4message
. ./getfile

cend="no"
while test "$cend" = "no" ; do
if test -e "$ans/include/X11/Xaw" || [ "X$ans" = "X-"  ]; then
cend="yes"
if test "X$ans" != "X-" ; then

g4ui_xawhome=$ans

else

g4ui_build_xaw_session=n
g4ui_use_xaw=n
echo " "

fi
else

g4message=`cat << EOM

You have selected to build the XAW based user interfaces.
But XAW was not found in $ans.
Please specify the correct path where XAW is installed on your system.

You can set '-' (without quotation) to CANCEL the XAW flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile
fi
done

else

g4message=`cat << EOM

You have selected to build the XAW based user interfaces.
But XAW was not found in expected place.
Please specify the correct path where XAW is installed on your system.

You can set '-' (without quotation) to CANCEL the XAW flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile

cend="no"
while test "$cend" = "no" ; do
if test -e "$ans/include/X11/Xaw" || [ "X$ans" = "X-"  ]; then
cend="yes"
if test "X$ans" != "X-" ; then

g4ui_xawhome=$ans

else

g4ui_build_xaw_session=n
g4ui_use_xaw=n
echo " "

fi
else

g4message=`cat << EOM

You have selected to build the XAW based user interfaces.
But XAW was not found in $ans.
Please specify the correct path where XAW is installed on your system.

You can set '-' (without quotation) to CANCEL the XAW flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile
fi
done
fi

if test "X$g4osname" = "XLinux"; then 

if test "X$g4ui_xawhome" = "X/usr" -o "X$g4ui_xawhome" = "X/usr/local" ; then
g4ui_xawhome=""
fi
fi
fi # g4vis_build_opheglxm_driver

###############################################
# Set XMFLAGS and XMLIBS
#

if test "X$g4ui_build_xaw_session" = "Xy" ; then

if test "X$g4osname" = "XAIX" ; then
g4ui_xawflags=" -I$g4ui_xawhome/include "
g4ui_xawlibs=" -L$g4ui_xawhome/lib -lXaw -lXmu -lXt -lX11 -lXext "
fi

if test "X$g4osname" = "XLinux" ; then
	if test "X$g4ui_xawhome" = "X" ; then
		g4ui_xawflags=""
	else
		g4ui_xawflags=" -I$g4ui_xawhome/include "
	fi

	if test "X$g4ui_xawhome" = "X/usr/X11R6" -o "X$g4ui_xawhome" = "X" ; then
		g4ui_xawlibs=" -lXaw "
	else
		if test -d "$g4ui_xawhome/lib64" ; then
			g4ui_xawlibs=" -L$g4ui_xawhome/lib64 -lXaw "
		else
			g4ui_xawlibs=" -L$g4ui_xawhome/lib -lXaw "
		fi
	fi
fi

if test "X$g4osname" = "XDarwin" ; then
g4ui_xawflags=" -I$g4ui_xawhome/include "
g4ui_xawlibs=" -L$g4ui_xawhome/lib -lXaw "
fi

if test "X$g4osname" = "XDEC" ; then
g4ui_xawflags=" -I$g4ui_xawhome/include "
g4ui_xawlibs=" -L$g4ui_xawhome/lib -lXaw "
fi

if test "X$g4osname" = "XHP" ; then
g4ui_xawflags=" -I$g4ui_xawhome/include "
g4ui_xawlibs=" -L$g4ui_xawhome/lib -lXaw "
fi

if test "X$g4osname" = "XSGI" ; then
g4ui_xawflags=" -I$g4ui_xawhome/include "
g4ui_xawlibs=" -L$g4ui_xawhome/lib -lXaw "
fi

if test "X$g4osname" = "XSUN" ; then
g4ui_xawflags=" -I$g4ui_xawhome/include "
g4ui_xawlibs=" -L$g4ui_xawhome/lib -L/usr/openwin/lib -L/usr/dt/lib -L/usr/ucblib -R/usr/openwin/lib -lXaw -lXmu -lXt -lX11 -lXext "
fi

fi # end of XM build 

###############################################
###############################################

g4message="Enable building of the X11-Motif (Xm) UI module?"

dflt=$g4ui_build_xm_session
rp=$g4message
. ./myread
gans=$ans

	case $gans in
	
	n*|N*) 
		g4ui_build_xm_session=n
		g4ui_use_xm=n
		;;
	y*|Y*) 
		g4ui_build_xm_session=y
		g4ui_use_xm=y
		;;
	esac


############################################################
############################################################

if test "X$g4ui_build_xm_session" = "Xy" ; then

if test "X$g4vis_xmhome" = "X" ; then
xm_dirs=`find $g4vis_xmhome /usr/X11R6/include /usr/local/include /usr/include /sw/include -type d -name Xm 2>/dev/null |xargs echo`
#echo ogl_dirs=$ogl_dirs

if test "X$xm_dirs" != "X" ; then

g4xm_base_dir_found=`echo $xm_dirs|cut -d" " -f1`
#echo g4ogl_base_dir_found=$g4ogl_base_dir_found

# That's right: should be twice! (e.g./usr/local/lib/libGLU.so -> /usr/local)
g4xm_base_dir_found=`dirname $g4xm_base_dir_found`
g4xm_base_dir_found=`dirname $g4xm_base_dir_found`

	g4vis_xmhome=$g4xm_base_dir_found
#else
#case "$g4vis_xmhome" in
#'')
#	g4vis_xmhome=/usr/X11R6/
#	;;
#esac
fi
fi

##########################################################################

#if test "X$g4vis_xmhome" != "X" ; then
#xm_dirs=$g4vis_xmhome
#fi

if test "X$g4vis_xmhome" != "X" ; then

g4message=`cat << EOM

You have selected to build the X11-Motif(Xm) based user interfaces.
Specify the correct path where Xm is installed on your system.
It was found in $g4vis_xmhome. Press [Enter] to set this path or type the correct one.

You can set '-' (without quotation) to CANCEL the XM flag at all:

EOM`

dflt=$g4vis_xmhome
fn='d~(-)'
rp=$g4message
. ./getfile

cend="no"
while test "$cend" = "no" ; do
if test -e "$ans/include/Xm" || [ "X$ans" = "X-"  ]; then
cend="yes"
if test "X$ans" != "X-" ; then

g4vis_xmhome=$ans

else

g4ui_build_xm_session=n
g4ui_use_xm=n
echo " "

fi
else

g4message=`cat << EOM

You have selected to build the X11-Motif(Xm) based user interfaces.
But Xm was not found in $ans.
Please specify the correct path where Xm is installed on your system.

You can set '-' (without quotation) to CANCEL the XM flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile
fi
done

else

g4message=`cat << EOM

You have selected to build the X11-Motif(Xm) based user interfaces.
But Xm was not found in the expected place.
Please specify the correct path where Xm is installed on your system.

You can set '-' (without quotation) to CANCEL the XM flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile

cend="no"
while test "$cend" = "no" ; do
if test -e "$ans/include/Xm" || [ "X$ans" = "X-"  ]; then
cend="yes"
if test "X$ans" != "X-" ; then

g4vis_xmhome=$ans

else

g4ui_build_xm_session=n
g4ui_use_xm=n
echo " "

fi
else

g4message=`cat << EOM

You have selected to build the X11-Motif(Xm) based user interfaces.
But Xm was not found in $ans.
Please specify the correct path where Xm is installed on your system.

You can set '-' (without quotation) to CANCEL the XM flag at all:

EOM`

dflt=""
fn='d~(-)'
rp=$g4message
. ./getfile
fi
done
fi

if test "X$g4osname" = "XLinux"; then 
	if test "X$g4vis_xmhome" = "X/usr" -o "X$g4vis_xmhome" = "X/usr/local" ; then
		g4vis_xmhome=""
	fi
fi
fi # g4vis_build_opheglxm_driver

###############################################
# Set XMFLAGS and XMLIBS
#

if test "X$g4ui_build_xm_session" = "Xy" ; then

if test "X$g4osname" = "XAIX" ; then
g4vis_xmflags=" -I$g4vis_xmhome/include "
g4vis_xmlibs=" -L$g4vis_xmhome/lib -lXm -lXt -lX11 "
fi

if test "X$g4osname" = "XLinux" ; then
	if test "X$g4vis_xmhome" = "X" ; then
		g4vis_xmflags=""
	else
		g4vis_xmflags=" -I$g4vis_xmhome/include "
	fi

	if test "X$g4vis_xmhome" = "X/usr/X11R6" -o "X$g4vis_xmhome" = "X" ; then
		g4vis_xmlibs=" -lXm -lXpm "
	else
		if test -d "$g4vis_xmhome/lib64" ; then
			g4vis_xmlibs=" -L$g4vis_xmhome/lib64 -lXm -lXpm "
		else
			g4vis_xmlibs=" -L$g4vis_xmhome/lib -lXm -lXpm "
		fi
	fi
fi

if test "X$g4osname" = "XDarwin" ; then
g4vis_xmflags=" -I$g4vis_xmhome/include "
g4vis_xmlibs=" -L$g4vis_xmhome/lib -lXm -lXpm "
fi

if test "X$g4osname" = "XDEC" ; then
g4vis_xmflags=" -I$g4vis_xmhome/include "
g4vis_xmlibs=" -L$g4vis_xmhome/lib -lXm "
fi

if test "X$g4osname" = "XHP" ; then
g4vis_xmflags=" -I$g4vis_xmhome/include/Motif1.2 "
g4vis_xmlibs=" -L$g4vis_xmhome/lib/Motif1.2 -lXm "
fi

if test "X$g4osname" = "XSGI" ; then
g4vis_xmflags=" -I$g4vis_xmhome/include "
g4vis_xmlibs=" -L$g4vis_xmhome/lib -lXm "
fi

if test "X$g4osname" = "XSUN" ; then
g4vis_xmflags=" -I$g4vis_xmhome/include "
g4vis_xmlibs=" -L$g4vis_xmhome/lib -L/usr/openwin/lib -L/usr/dt/lib -L/usr/ucblib -R/usr/openwin/lib -lXt -lXm -lX11 "
fi

fi # end of XM build 

###############################################
###############################################

fi # if !WIN

if test "X$g4system" = "XWIN32-VC" -o "X$g4system" = "XWIN32-VC7"; then

g4message="Enable building of the WIN32 Terminal UI module?"

dflt=$g4ui_build_win32_session
rp=$g4message
. ./myread
gans=$ans

	case $gans in
	
	n*|N*) 
		g4ui_build_win32_session=n
		g4ui_use_win32=n
		;;
	y*|Y*) 
		g4ui_build_win32_session=y
		g4ui_use_win32=y
		;;
	esac

fi # if WIN

g4message=`cat << EOM

  G4UI_USE_TCSH
  Specifies to use the tcsh-style terminal in the application
  to be built.
EOM`

dflt=$g4ui_use_tcsh
rp=$g4message
#. ./myread
#gans=$ans
gans=y

	case $gans in
	
	n*|N*) 
		g4ui_use_tcsh=n
		;;
	y*|Y*) 
		g4ui_use_tcsh=y
		;;
	esac

;;
esac
