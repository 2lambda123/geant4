
                       geant4-09-03-ref-01
                       ===================

Some of the development/fixes included since the last development tag are:

 o Beta version of G4PenelopeOscillator* classes to manage multi-element atomic
   oscillators used in Penelope Compton and Ionisation models. Compliant with
   Penelope-2008.
 o Code review in Bertini Cascade hadronic model.


---------- Reference-tag 'Release Notes' -----------

(o)  Fixes included in release 9.2.p03

Summarised, the list of changes is the following:

config                                           config-V09-03-00
------
- binmake.gmk: removed extra space characters in definition of TARGOBJEXT,   (o)
  fixing issue with target for main() not being rebuilt according to
  dependencies change. Addressing problem report #1098. 

global                                           global-V09-03-00
------
- Modified G4PhysicsVector to own a pointer to G4PVDataVector, instead having
  it by value. First attempt to separate RO and RW objects for thread-safety. 

materials                                        materials-V09-03-00
---------
- G4OpticalSurface: removed left-over debug test function OverWrite() from
  class declaration, also causing unnecessary dependency on G4ios.

physics_lists                                    phys-lists-V09-03-00
-------------
- QBBC: fixed hadron inelastic configuration; instantiated G4PreCompoundModel
  and its pointer propagated to all high energy models.
  Use CHIPS for anti-protons to fix crash in FTF.

processes/cuts                                   procuts-V09-03-00
--------------
- Fix in G4ProductionCutTable to solve problem with zero range for protons.

processes/electromagnetic/lowenergy              emlowen-V09-03-02
-----------------------------------
- Beta version of G4PenelopeOscillator* classes to manage multi-element atomic
  oscillators used in Penelope Compton and Ionisation models. Compliant with
  Penelope-2008.
- Added dummy method ComputeCrossSectionPerAtom() in G4PenelopeRayleighModel, 
  never inkoved in tracking and issuing a warning if users access it via
  G4EmCalculator.
- Improved way of testing material in Geant4-DNA models.

processes/electromagnetic/utils                  emutils-V09-03-00
-------------------------------
- G4VEmProcess: added protection against negative cross section.             (o)
- G4VEnergyLossProcess: added protection against negative cross section, and
  improved logic in RetrieveTable() method.

processes/hadronic
------------------
- models/cascade (hadr-casc-V09-03-05)
  o Replaced all uses of bindingEnergy() (local Bertini method) with the
    Geant4 standard G4NucleiProperties::GetBindingEnergy(A,Z).
    G4Fissioner still uses Bertini method bindingEnergyAsymptotic().
  o Replaced usage of std::vector<> with G4ThreeVector where applicable
    in G4CascadParticle and G4NucleiModel.
  o Removed all use of G4CascadeMomentum (a simple container with a C-style
    four-element array) with G4LorentzVector.
  o G4InteractionCase: minor fix in initialisation in constructor to
    allow for porting on C++0x Standard.
  o G4CascadeMomentum: replaced use of static G4LV variables within functions
    with mutable data member of object; this does introduce more memory
    thrashing, but the plan is to get rid of the whole thing anyway.
    Improve implicit casting and add assignment from G4LV.
    Added interface to create from and cast to G4LorentzVector; provides a
    transition to eliminating this class entirely.
  o G4LorentzConverter: changed function signatures to accept G4LV as input,
    using implicit cast to convert existing G4CascadeMomentum argument
    passing. Simplified ::rotate() functions to use G4LV and
    G4ThreeVector operations rather than array index gymnastics.
    Moved some inline function implementations source.
  o G4ParticleLargerBeta, G4ParticleLargerEkin: added additional operator()
    which takes pointers (for future mods to reduce ctor/dtor cycling), and
    fix ordering bug in beta sorting. Added debugging printout togged with
    preprocessor flag.
  o G4InuclParticle, G4InuclNuclei, G4InuclElementaryParticle: rewrite to
    carry G4DynamicParticle data member, and to instantiate particle
    properties via G4ParticleDefinition subclasses. First stage in eventually
    use directly G4DynamicParticle for internal propagation.
    Consistency of physics results verified.
  o G4Diproton, G4Dineutron, G4UnboundPN: new G4ParticleDefinition
    subclasses, which implement the Bertini-specific dibaryon states.
    These are not used anywhere as yet, but will be used in future
    modifications to the G4InuclParticle subclasses.
  o Removed class G4BertiniNuclearModel, redundant with the G4NuclearModel
    class, and not used anywhere.

processes/optical                                op-V09-03-00
-----------------
- Fixed problem of initialization of 'PropertyPointers', now set to NULL at
  the start of PostStepDoIt(). Addresses problem report #1094.

visualization/gMocren                            gMocren-V09-03-00
---------------------
- Fixed file-I/O bug in G4GMocrenFileViewer and G4GMocrenIO.
- G4GMocrenFileSceneHandler: fix to allow for porting on C++0x Standard:
  made explicit with static_cast conversions from double to float. Also use
  G4 types in consistent way. Removed debug code with printout. 

examples                                         examples-V09-03-00
--------
- Updated reference outputs.
- Corrected GNUmakefiles whereever necessary for default setting of G4INSTALL.
- extended/electromagnetic/TestEm3 (testem3-V09-03-00)
  o Added PhysListEmStandardGS and PhysListEmStandardWVI.
  o Added printout of mean number of gamma, e-, e+.
- extended/hadronic/Hadr01 (exhadr01-V09-03-01)
  o Fixed problem of counting of particles leaked from the target.
  o When PhysList defined via PHYSLIST environment variable still
    make local PhysList messenger available to avoid crash in old macro.
- extended/medical/electronScattering (electronScattering-V09-03-00)
  o Added PhysListEmStandardWVI.
  o RunAction::PrintFluence(): print unormalized fluence per event.
- extended/medical/electronScattering2 (exampleES2-V09-02-01)
  o New example for simulation of precision electron scattering benchmark
    with minimal user code.
- extended/medical/fanoCavity (fano-V09-03-00)
- extended/medical/fanoCavity2 (fano2-V09-03-01)
  o Introduced PhysListEmStandard_option2 (UrbanMscModel93 without options)
    and PhysListEmStandard_WVI (using WentzelVIModel).
  o Added to run01.mac all physics lists choice.
- extended/optical/wls (WLS-V09-03-00)
  o Added missing initialization macro init.in.
- extended/persistency/gdml/G01 (G01-V09-03-01)
  o Added printout of associated auxiliary information value.
  o Corrected typo in replicated.gdml file.
- extended/visualization/userVisAction (exam-ext-vis-UVA-V09-03-00)
  o Introduced G4UIExecutive.
- novice/N02 (exampleN02-V09-03-00)
  o Correction in DetectorConstruction::SetMagField() to invoke
    fpMagField->SetMagFieldValue().
- novice/N03 (exampleN03-V09-03-00)
  o visTutor: corrected exN03Vis14.mac and exN03Vis15.mac to enable
    visualization of tracks and removed redundancy; updated gui.mac
    adding missing macros and correcting order; corrected comments
    wherever necessary.

tests                                            tests-V09-03-00
-----
- Updated reference outputs and tools.
- Corrected GNUmakefiles whereever necessary for default setting of G4INSTALL.
- test30 (test30-V09-03-01)
  o Added control on statistics and activation of generators via environment 
    variables and SetModels.csh script.
  o Added options FermiBreakUp and default/GEM evaporation; propagate
    pre-compound, deexcitation options to all generators using native
    pre-compound model.
