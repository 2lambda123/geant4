 1.10.0 :
 - tests/cpp/*.cpp : use new random API.
 - tools/cmathT,randT,rtausme[ui,f,d],randd,randf,random,rroot/streamers : to quit Coverity, revisit random
   generators to avoid usage of stdlib.h/rand() indirectly used in rroot/streamers.
 - tools/rroot/base_leaf,basket,branch,leaf,streamers : modifications to quiet Coverity.
 - tools/mathd : rename math to mathd to follow naming convention [f,d] used in other places.
 - test/cpp/build : inflate.c -> csz_inflate.cc.
 - src/inflate.c -> src/csz_inflate.cc.

 1.9.4 :
 - test/cpp/rxrayfluo.cpp : add a ntuple_binding usage.
 - tools/ntuple_binding, rroot/ntuple : logic to attach user variables to ntuple columns when reading.
   Available today only for the root format.
 - tools/rroot/named, tree : use of the tools_vforcit cpp macro to simplify edition of loops with iterators.
 - histo/c1d : correct a mistyping in "#define tools_histo_c1d" that was _cld !

 1.9.3 :
 - test/cpp/waxml.cpp : have an histo title with <,>,&,",' to test XML escaping when writing
   at the AIDA XML format.
 - tools/waxml/begend, histos, ntuple : use to_xml() to escape the XML special characters in strings.
 - tools/waxml/begend : change output dtd version from 3.0 to 3.2.1.
 - tools/ntuple_booking : to quiet coverity, in operator=() add :
     if(&a_from==this) return *this;

 1.9.1 :
 - test/cpp/rxrayfluo.cpp : to test the reading of a xrayfluo.root file.

 1.9.0 :
 - tools/rroot, test/cpp/rroot.cpp : code to read a file at CERN-ROOT format.

 1.8.0 :
 - tools/[wroot,waxml]/ntuple : handle the creation of std::vector columns through
   the new ntuple_booking class.
 - tools/[wroot,waxml,hbook]/ntuple, wcsv_ntuple : handle the new ntuple_booking.
 - tools/ntuple_boooking : revisit the logic. Have a column_booking class.
   Handle a opaque pointer for the std::vector column case. Have fields protected
   and have getter, setter methods.
 - tools/wroot/ntuple : rm the unused m_def field in the std_vector_column class.

 1.7.2 :
 - test/cpp/wroot.cpp, rroot.C : have an example of std_vector columns.
 - tools/wroot/branch_element, leaf_element, ntuple::std_vector_column : handle column
   of std::vectors. 
 - mgr/build_app : have :
     cppflags="${cppflags} -I../g4tools/include"

 1.7.1 :
 - tools/wroot/buffer : expand2() method to have same logic as CERN-ROOT/TBuffer.
   It boosts the writing of ntuple with large number of columns.
 - tools/forit : use tools_[v,s,l,m]for[c]it cpp macros to shorten iterator/loop code.

 1.7.0 :
 - test/cpp/list_free_segs.C : to list free segments in a out.root file.
 - wroot/file : set_END() : update first back free segment m_first field
   when writing something. This permits to have good free segs infos in file.
 - wroot/file/make_free_seg : use free_seg/add_free() function.
 - wroot/free_seg : add_free function.
 - histo/c[1,2,3] : operator= : protect against same object.
 - wroot/named/ObjArray : operator= : protect against same object.
 - wroot/ntuple/column : operator= : protect against same object.
 - sto/to() : have a default value.
 - pointer/p2s : void* -> const void*.
 - args/find() : have a default value.

 1.6.0 :
 - test/cpp/wroot.cpp : add an empty tree to check the below modification.
 - wroot/basket/stream : remove the if(!m_data.length()) test that
   refrains to write an empty tree.
 - wroot/store : put in this directory the code that permits to stream
   histos with all their internal infos.
 - args, path, hbook/hdummy.c : changes coming from the inlib/exlib
   context but not used within g4tools. 

 1.5.0 :
 - build_f77 : modifications to build from CYGWIN with DF98 fortran.
 - wroot : osc_streamers, iobj_const_visitor, to, buffer, member_writer :
   modifications in order to be able to stream histos as in
   OpenScientist/BatchLab and then with all the internal infos.
   We remember that the ROOT/TH streaming does not handle the number
   of entries per bin (but only the weight per bin) and not the annotations.
 - tools/gzip_buffer, test/cpp/wroot.cpp : show how to use compression
   with zlib.
 - histo/base_histo : in a for, change an unsigned to "unsigned int".
 - histo/c[1,2,3]d : inlib::mn,mx<> changed to mn,mx<>.
 - wroot/wbuf : have a public : set_byte_swap() method (then
   the wbuf byte swapping can be changed out of the constructor).
 - safe_cast, hbook/wntuple  : rename the global cast() functions
   to safe_cast(). It permits to trace them more easily.
 - strip : have a "return bool" returning true if some stripping had been done.
 - test/cpp/use_cc, use_cpp, build : [cc,cpp]_linker : variables to
   explicitely link with cc or cpp.
 - test/cpp/use_cernlib : Windows : try to handle a build from cygwin.
 - vmanip, mem, platform, mem : slight changes coming from the inlib/exlib
   context but not used within g4tools. 
 - license file : correct some typos (` to ').

 1.4.3 :
 - histo/b3,h3d : have a print() method. (Few things in it for the moment...)
 - histo/sliced : for h3 : projection_[xy,yz,xz] methods.
 - test/cpp/histo.cpp : example of a h3d with some projections.   

 1.4.2 :
 - histo/h3::fill : bug correction : line 69 [3] -> [2].
 - test/cpp/use_cpp : g++ : have the -shadow option.
 - histo/c[1,2,3]d : set_histogram(), s_class() : methods needed when
   creating back objects when reading an AIDA xml file.
   (In fact not used today since reading files is not used in G4).
 - modifs in typedefs, cids, tos, vmanip : the same, coming from modifs
   in inlib related to the reading of files.

 1.4.1 : 21 Aug 2012 : G.Barrand :
 - wroot/file, free_seg : handle (and save) "free segments".
   It permits to open the file correctly when opening back
   from CERN-ROOT with "UPDATE" mode.

 1.4.0 : 20 Aug 2012 : G.Barrand :
 - Handle "axis title for plotting" through annotations.
   See examples/cpp/[wroot,waxml].cpp for examples.
 - Arrange so that "axis title for plotting" be saved in .root file
   so that ROOT plotting handle these titles.
 - Save annotations for the AIDA file format.
 - NOTE : it does not seem to have an HBOOK API to save
   per histogram "axis title for plotting" in a HBOOK file.

 1.3.2 : 17 Aug 2012 : G.Barrand :
 - base_histo : have annotations.

 1.3.1 : 24 Jul 2012 : G.Barrand :
 - hbook/h1,h2,p1 : have a configure() method to rebook.
 - hbook/h1,h2,p1,base_histo : have title(),reset(),all_entries()
   on base_histo.

 1.3.0 : 20 Jul 2012 : G.Barrand :
 - add file/class ntuple_booking to capture a ntuple booking parameters.
 - hbook/wntuple, waxml/ntuple, wcsv_ntuple : add a constructor receiving
   a ntuple_booking object.
 - tests/cpp/[waxml,whbook,wroot,wcsv_booking].cpp : have an example of usage
   of the creation of an ntuple by using a ntuple_booking object.

 1.2.1 : 19 Jul 2012 : G.Barrand :
 - histo/b1,b2,b3 : have public configure methods to rebook an existing
   histogram.
 - histo/b3 constructor : variable ns changed to nbins to remove a
   "-shadow pinaillage" warning.
 - change "private" to "protected" in various classes to let things
   opened via inheritance.
 - test/cpp/build : g++ : -shadow.
 - test/cpp/build : CYGWIN : changes to build also with VisualStudio 2009.

 1.2.0 : 28 May 2012 : G.Barrand :
 - waxml/ntuple : do not write the default option in the column element.
   It permits to have XML files with ntuple readable by jas3.
   The 1.4 release of ioda can also read these files.
 - sto : remove the "tellg() logic". There is a difference of comportement
   of tellg() in the g++ 4.6.x versions. We use now fail() to detect
   if a stream conversion toward numbers is ok or not.
 - tools/hbook/base_histo : have an hbook_id() method to get the... HBOOK ID!
 - tools/hbook/h1,h2,base_histo : displace scale() on base_histo.
 - tools/hbook/h1,h2,base_histo : add(),subtract(),multiply(),divide() methods.
   (To please Michel).
 - Slight corrections to remove messages from the -Wshadow "pinaillage" option.
   (Hell, if a compiler misunderstands the name of a local variable with the
   name of a method...)
 - Slight corrections to compile with clang++.
 - modify test/cpp/build to build the C++ programs from CYGWIN by using
   the Visual Studio compiler.

 1.1.0 : 8 Feb 2012 : G.Barrand :
 - split the fill_infos() function in wroot/infos.
   It was too long and induces warning with icc and g++.

 1.0.6 : 8 Feb 2012 : G.Barrand :
 - build from code of inexlib-1.3.
 - histo : some "this->" changed to "parent::".
   "this->" is needed only when invoking virtual methods.
 - have snpf to avoid too much #ifdef WIN32 for [v]snprintf.
 - have "typedef cid" in a standalone cid file.
 - remove some remaining inline keyword within class.
 - test/cpp/use_clang : to build with clang. Tested with
   clang-3.0 on MacOSX. To use clang :
     cd test/cpp
     ./build -clang
 - add this history file.


