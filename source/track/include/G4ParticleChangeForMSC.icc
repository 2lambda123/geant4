//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4ParticleChangeForMSC.icc,v 1.4 2001-07-11 10:08:36 gunter Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
// 

inline 
 const G4ThreeVector* G4ParticleChangeForMSC::GetMomentumChange() const
{
  return &theMomentumDirectionChange;
}

inline 
 void G4ParticleChangeForMSC::SetMomentumChange(
						G4double Px, 
						G4double Py, 
						G4double Pz	)
{
  theMomentumDirectionChange.setX(Px);
  theMomentumDirectionChange.setY(Py);
  theMomentumDirectionChange.setZ(Pz);
}

inline 
 void G4ParticleChangeForMSC::SetMomentumChange(const G4ThreeVector& P)
{
  theMomentumDirectionChange = P;
}
inline 
 const G4ThreeVector* G4ParticleChangeForMSC::GetMomentumDirectionChange() const
{
  return &theMomentumDirectionChange;
}

inline 
 void G4ParticleChangeForMSC::SetMomentumDirectionChange(
						G4double Px, 
						G4double Py, 
						G4double Pz	)
{
  theMomentumDirectionChange.setX(Px);
  theMomentumDirectionChange.setY(Py);
  theMomentumDirectionChange.setZ(Pz);
}

inline 
 void G4ParticleChangeForMSC::SetMomentumDirectionChange(const G4ThreeVector& P)
{
  theMomentumDirectionChange = P;
}

inline 
 const G4ThreeVector* G4ParticleChangeForMSC::GetPositionChange() const
{
  return &thePositionChange;
}

inline 
 void G4ParticleChangeForMSC::SetPositionChange(const G4ThreeVector& finalPosition)
{
  thePositionChange= finalPosition;
}

inline 
 void G4ParticleChangeForMSC::SetPositionChange(G4double x,G4double y, G4double z)
{
  thePositionChange.setX(x);
  thePositionChange.setY(y);
  thePositionChange.setZ(z);
}

