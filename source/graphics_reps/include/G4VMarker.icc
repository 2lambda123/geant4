//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4VMarker.icc,v 1.6 2001-07-11 10:01:04 gunter Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
// 

inline G4Point3D G4VMarker::GetPosition () const {
  return fPosition;
}

inline G4double G4VMarker::GetWorldSize () const {
  return fWorldSize;
}

inline G4double G4VMarker::GetWorldDiameter () const {
  return fWorldSize;
}

inline G4double G4VMarker::GetWorldRadius () const {
  return fWorldSize / 2.;
}

inline G4double G4VMarker::GetScreenSize () const {
  return fScreenSize;
}

inline G4double G4VMarker::GetScreenDiameter () const {
  return fScreenSize;
}

inline G4double G4VMarker::GetScreenRadius () const {
  return fScreenSize / 2.;
}

inline G4VMarker::FillStyle G4VMarker::GetFillStyle () const {
  return fFillStyle;
}

inline void G4VMarker::SetPosition (const G4Point3D& pos) {
  fPosition = pos;
}

inline void G4VMarker::SetWorldSize (G4double ws) {
  fWorldSize = ws;
}

inline void G4VMarker::SetWorldDiameter (G4double wd) {
  fWorldSize = wd;
}

inline void G4VMarker::SetWorldRadius (G4double wr) {
  fWorldSize = 2. * wr;
}

inline void G4VMarker::SetScreenSize (G4double ss) {
  fWorldSize  = 0.;
  fScreenSize = ss;
}

inline void G4VMarker::SetScreenDiameter (G4double sd) {
  fWorldSize  = 0.;
  fScreenSize = sd;
}

inline void G4VMarker::SetScreenRadius (G4double sr) {
  fWorldSize  = 0.;
  fScreenSize = 2. * sr;
}

inline void G4VMarker::SetFillStyle (G4VMarker::FillStyle style) {
  fFillStyle = style;
}


