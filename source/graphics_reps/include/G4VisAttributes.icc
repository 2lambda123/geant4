//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4VisAttributes.icc,v 1.5 2002-10-24 14:36:40 johna Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
// 
// John Allison  18th November 1996

inline G4bool G4VisAttributes::IsVisible () const {return fVisible;}

inline G4bool G4VisAttributes::IsDaughtersInvisible () const {
  return fDaughtersInvisible;
}

inline const G4Colour& G4VisAttributes::GetColour () const {return fColour;}

inline const G4Color&  G4VisAttributes::GetColor  () const {return fColour;}

inline G4VisAttributes::LineStyle G4VisAttributes::GetLineStyle () const {
  return fLineStyle;
}

inline G4double G4VisAttributes::GetLineWidth () const {
  return fLineWidth;
}

inline G4bool G4VisAttributes::IsForceDrawingStyle () const {
  return fForceDrawingStyle;
}
inline G4VisAttributes::ForcedDrawingStyle
G4VisAttributes::GetForcedDrawingStyle () const {
  return fForcedStyle;
}

inline const G4std::vector<G4AttValue>*
G4VisAttributes::GetAttValues () const {
  return fAttValues;
}

inline const G4std::vector<G4AttDef>* G4VisAttributes::GetAttDefs () const {
  return fAttDefs;
}

inline void G4VisAttributes::SetVisibility (G4bool v) {fVisible = v;}

inline void G4VisAttributes::SetDaughtersInvisible (G4bool v) {
  fDaughtersInvisible = v;
}

inline void G4VisAttributes::SetColour (const G4Colour& colour) {
  fColour = colour;
}

inline void G4VisAttributes::SetColor (const G4Color& color) {
  fColour = color;
}

inline void G4VisAttributes::SetColour
(G4double red, G4double green, G4double blue, G4double alpha) {
  fColour = G4Colour (red, green, blue, alpha);
}

inline void G4VisAttributes::SetColor
(G4double red, G4double green, G4double blue, G4double alpha) {
  fColour = G4Color (red, green, blue, alpha);
}

inline void G4VisAttributes::SetLineStyle (G4VisAttributes::LineStyle style) {
  fLineStyle = style;
}

inline void G4VisAttributes::SetLineWidth (G4double w) {
  fLineWidth = w;
}

inline void G4VisAttributes::SetForceWireframe (G4bool force) {
  fForceDrawingStyle = force;
  fForcedStyle = G4VisAttributes::wireframe;
}

inline void G4VisAttributes::SetForceSolid (G4bool force) {
  fForceDrawingStyle = force;
  fForcedStyle = G4VisAttributes::solid;
}

inline void G4VisAttributes::SetAttValues
 (const G4std::vector<G4AttValue>* attValues){
  fAttValues = attValues;
}

inline void G4VisAttributes::SetAttDefs
 (const G4std::vector<G4AttDef>* attDefs) {
  fAttDefs = attDefs;
}
