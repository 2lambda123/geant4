//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
// by V. Lara


#include <CLHEP/Random/RandGamma.h>
#define G4RandGamma  RandGamma


inline G4bool G4HETCFragment::
IsItPossible(const G4Fragment & aFragment) const
{
  G4int pplus = aFragment.GetNumberOfCharged();
  G4int pneut = aFragment.GetNumberOfParticles()-pplus;
  return (pneut >= (GetA()-GetZ()) && pplus >= GetZ());
}


inline G4double G4HETCFragment::
BetaRand(const G4int N, const G4int L) const
{
  G4double Y1 = G4RandGamma::shoot(N,1);
  G4double Y2 = G4RandGamma::shoot(L,1);
  
  return Y1/(Y1+Y2);
}
