//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================
#ifndef AIDA_IFUNCTIONFACTORY_H
#define AIDA_IFUNCTIONFACTORY_H 1

//  This file is part of the AIDA library
//  Copyright (C) 2002 by the AIDA team.  All rights reserved.
//  This library is free software and under the terms of the
//  GNU Library General Public License described in the LGPL.txt 

#include <string>

namespace AIDA {

class IFunction;
class IFunctionCatalog;

/** @interface IFunctionFactory
 *
 * Function factory.
 *
 * @author The AIDA team (http://aida.freehep.org/)
 *
 * @stereotype abstractfactory
 */
 
class IFunctionFactory {

public: 
    /// Destructor.
    virtual ~IFunctionFactory() { /* nop */; }

    /**
     * Create function from a name registered in the catalog.
     * This is the easiest way to create simple model functions for fitting.
     * Every AIDA compliant implementation should predefine "G", "E", "Pn"
     * (n is an integer, e.e "P0","P5"). Simple operations are permitted,
     * e.g. "G+P2".
     */
    virtual IFunction * createFunctionByName(const std::string & name, std::string model) = 0;

    /**
     * Create function from script. Script conventions:
     * example:  createFunctionFromScript("f1", 2, "a*x[0]*x[0] + b*x[1]", "a,b", 
                                          "this is my function", "2*a*x[0],b")
     */
    virtual IFunction * createFunctionFromScript(const std::string & name, int dim, std::string valexpr, std::string parameters, std::string description, std::string gradexpr = "") = 0;

    virtual IFunction * cloneFunction(const std::string & name, IFunction * f) = 0;

    /**
     * get access to the function catalog
     */
    virtual IFunctionCatalog * catalog() = 0;

    /** @link association 
     * @directed*/
    /*# IFunctionCatalog lnkIFunctionCatalog; */
}; // class
}; // namespace AIDA
#endif /* ifndef AIDA_IFUNCTIONFACTORY_H */
