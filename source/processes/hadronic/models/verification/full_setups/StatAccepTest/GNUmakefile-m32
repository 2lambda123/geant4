name := mainStatAccepTest
G4TARGET := $(name)
G4EXLIB := true

ifdef HISTOGRAMS_ON
  CPPFLAGS += -DflagHISTOGRAMS_ON
endif

ifdef G4ANALYSIS_USEROOT
  EXTRALIBS += $(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/G4TypesDict.o
  EXTRA_LINK_DEPENDENCIES := $(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/libG4TypesDict.so
endif

include $(G4INSTALL)/config/architecture.gmk

CXXFLAGS += -m32

.PHONY: all
 
all: lib bin

include $(G4INSTALL)/config/binmake.gmk

ifdef G4ANALYSIS_USEROOT
  CPPFLAGS += -DG4ANALYSIS_USEROOT
  CPPFLAGS += `linux32 root-config --cflags`
  LDFLAGS  += `linux32 root-config --libs`
endif

ifdef FULLY_STATIC_EXECUTABLE
  LDFLAGS  += -static
endif 

$(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/libG4TypesDict.so: $(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/G4TypesDict.o
ifdef CPPVERBOSE
	g++ $(CPPFLAGS) -shared -fPIC -Wl,-soname,libG4TypesDict.so -o $(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/libG4TypesDict.so $(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/G4TypesDict.o
else
	@g++ $(CPPFLAGS) -shared -fPIC -Wl,-soname,libG4TypesDict.so -o $(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/libG4TypesDict.so $(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/G4TypesDict.o
endif

$(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/G4TypesDict.o: src/G4TypesLinkDef.h
ifdef CPPVERBOSE
	linux32 rootcint -f $(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/G4TypesDict.cxx -c -I$(G4INSTALL)/source/global/management/include G4Types.hh src/G4TypesLinkDef.h
	g++ $(CPPFLAGS) -fPIC -c -o $(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/G4TypesDict.o $(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/G4TypesDict.cxx
else
	@linux32 rootcint -f $(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/G4TypesDict.cxx -c -I$(G4INSTALL)/source/global/management/include G4Types.hh src/G4TypesLinkDef.h
	@g++ $(CPPFLAGS) -fPIC -c -o $(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/G4TypesDict.o $(G4WORKDIR)/tmp/$(G4SYSTEM)/$(name)/G4TypesDict.cxx
endif
