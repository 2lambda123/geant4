// This code implementation is the intellectual property of
// the GEANT4 collaboration.
//
// By copying, distributing or modifying the Program (or any work
// based on the Program) you indicate your acceptance of this statement,
// and all its terms.
//
// $Id: G4QHadron.hh,v 1.2 1999-12-15 14:52:10 gunter Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//

#ifndef G4QHadron_h
#define G4QHadron_h 1

// ------------------------------------------------------
//      GEANT 4 class header file
//
//      For information related to this code contact:
//      CERN, CN Division, ASD group
//      ---------------- G4QHadron ----------------
//             by Mikhail Kossov, Sept 1999.
//  class header for Hadrons generated by the CHIPS Model
// ------------------------------------------------------

//#include <iostream.h>
#include "globals.hh"
#include "G4LorentzVector.hh"
#include "G4ParticleTable.hh"
#include "G4QContent.hh"

class G4QHadron
{
public:
  G4QHadron();
  G4QHadron(G4int PDGcode);                //Constructor for the "Stable Hadron"
  G4QHadron(G4int PDGcode, G4double maxM); //Constructor for the "Resonance"
  G4QHadron(const G4QHadron& right);

  ~G4QHadron();

  const G4QHadron & operator=(const G4QHadron& right);

  int operator==(const G4QHadron& right) const;

  int operator!=(const G4QHadron& right) const;
      
  virtual G4double CalculateMass(G4double maxM,G4int PDG=0);// Calculate the Hadron mass
  G4int GetPDGcode() const;                                 // Get PDG code of the Hadron
  void  SetPDGcode(const G4int& newPDG);                    // Set PDG code of the Hadron
      
  G4ParticleDefinition* GetDefinition();                    // Get Particle Definition pointer 
  void SetDefinition(G4ParticleDefinition* newDef);         // Set Particle Definition pointer

  G4LorentzVector Get4Momentum();                           // get 4-mom of the Hadron
  void Set4Momentum(const G4LorentzVector& aMom);           // set 4-mom of the Hadron
      

  G4QContent GetQC();                                       // Get private quark content
  void       SetQC(const G4QContent& newQC);                // Set new private quark content
  G4double   GetMass();                                     // Get a mass of the Hadron
  G4double   GetMass2();                                    // Get an m^2 value for the Hadron

private:  
  G4int                 PDGencoding;                        // Code in Particle Data Group
  G4ParticleDefinition* theDefinition;                      // Pointer to PDG Table
  G4LorentzVector       theMomentum;                        // The 4-mom of Hadron
  G4QContent            valQ;                               // Content of valence quarks
};

inline int G4QHadron::operator==(const G4QHadron &right) const  {return this==&right;}	
inline int G4QHadron::operator!=(const G4QHadron &right) const  {return this!=&right;}
 
inline G4int                  G4QHadron::GetPDGcode() const     {return PDGencoding;}
inline void G4QHadron::SetPDGcode(const G4int& newPDG)          {PDGencoding=newPDG;}
inline G4ParticleDefinition*  G4QHadron::GetDefinition()        {return theDefinition;}

inline G4QContent G4QHadron::GetQC()                            {return valQ;}
inline void G4QHadron::SetQC(const G4QContent& newQC)           {valQ=newQC;}

inline G4LorentzVector G4QHadron::Get4Momentum()                {return theMomentum;}
inline void G4QHadron::Set4Momentum(const G4LorentzVector& aMom){theMomentum=aMom;}
inline G4double G4QHadron::GetMass()                            {return theMomentum.m();}
inline G4double G4QHadron::GetMass2()                           {return theMomentum.m2();}

#endif


