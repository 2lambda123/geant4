
INCL/ABLA tests README

Pekka Kaitaniemi, HIP
pekka.kaitaniemi@helsinki.fi


I Contents of the test/ directory:

interfacetest/      Test for the INCL/ABLA Geant4 interface
evaporationtest/    Test for the ABLA de-excitation interface
unittest/           Unittests for INCL/ABLA

standalonetest/     Standalone INCL4 test driver.
standaloneinclabla/ Standalone INCL4/ABLA test driver.
out2root/	    Utility for converting ASCII .out -files to ROOT
		    trees for analysis.

data/		    Data for the plotting. This directory contains the
		    data generated using the reference FORTRAN INCL4/ABLA	   
		    implementation and the data generated by the C++
		    version.
plots/		    Directory for plots
validation/	    Scripts for making validation plots


II Requirements and dependencies:

1. Geant4 (obviously!) version 8.3 was used for development.

2. ROOT versions 5.14.00 and 5.16.00 have been used. Older versions
probably also work.


III Building and using the tests:

0. Untar the tarball using command tar -zxf <file> into directory
$G4INSTALL/source/processes/hadronic/models

1. Build INCL4/ABLA itself by issuing command "make" in the incl/
-directory.

2. Enter directory test/out2root and issue command "make". This tool
is used by the INCL4/ABLA test driver.

3. Enter directory test/standaloneinclabla and issue command "make" in
order to build the actual test driver.

4. Everything should be ready. You can now issue command "make help"
in the test/standaloneinclabla directory to see the available test
runs.


IV Analysing the output

There are three important things that must be considered when analysing
the output: TTree contents in the ROOT file, particle ID's used by
INCL and the normalization of results.

The ASCII data is converted using the program out2root into a root
file with one TTree object. The tree (called "h101") contains numbers
and arrays. Here is the list of variables in the tree:
Massini	        A of the remnant
Mzini	        Z    "        "
Exini	        Excit energy " "
Mulncasc	Cascade n multip.
Mulnevap	Evapo   "      "
Mulntot	        Total   "      "
Bimpact	        Impact parameter
Jremn	        Remnant Intrinsic Spin
Kfis	        Fission 1/0=Y/N
Estfis		Excit energy at fis
Izfis		Z of fiss nucleus
Iafis		A of "          "
Ntrack		Number of particles
Ityp[Ntrack]	emitted in cascade (1)
                or evapo   (0)
Avv[Ntrack]	A (-1 for pions)
Zvv[Ntrack]	Z
Enerj[Ntrack]	kinetic energy
Plab[Ntrack]	momentum
tetlab[Ntrack]	Theta (deg)
philab[Ntrack]	Phi   (deg)

The particles are identified using variables Avv and Zvv. The particle
codes are as follows:
Avv Zvv  Type
-1   -1   Pi-
-1   0    Pi0
-1   1    Pi+
1    1    Proton
1    0    Neutron
A    Z    Nucleus fragment (A > 1, Z >= 1), some examples below
2    1    Deuteron
3    1    Triton
4    3    He3
4    2    Alpha
208  82   Pb208

The normalization factor is calculated as follows:
f = geomCrossSection/(Events - transparentEvents)
All these numbers canbe found in the output.out.runSummary file where
the output.out is the ASCII file produced by the test driver. The
command to plot e.g. the outcoming particle type and isotope
distribution is as follows:
h101->Draw("Avv", "<insert normalization coefficient here>")
