
INCL/ABLA tests README

Pekka Kaitaniemi, HIP
pekka.kaitaniemi@helsinki.fi


I CONTENTS OF THE TEST/ DIRECTORY

run.sh              Main test run script
runref.sh           Script for running the FORTRAN version
runs.conf           Config file for testruns
incl.cc             INCL/ABLA test program
abla.cc             ABLA test program
out2root.cc         Convert ASCII output to ROOT files
scripts/            Scripts for plotting with ROOT (GUI provided by tests.C)
ex1/                An example Geant4 program using INCL/ABLA
data/		    See data/README
orig/               Reference to original FORTRAN code


II REQUIREMENTS AND DEPENDENCIES

1. Geant4 9.1 was used for development.

2. ROOT (any version will do)


III BUILDING AND USING THE TESTS

0. If your Geant4 version is earlier than 9.1 you have to download
INCL/ABLA separately. Untar the tarball using command tar -zxf
<file> into directory $G4INSTALL/source/processes/hadronic/models

1. Build INCL4/ABLA by issuing command "make" in the incl/
-directory.

2. Enter the test/ directory and run command "make build".

3. You can do a test run by using "./run.sh <runID>". The runID's are
defined in runs.conf (use "cat runs.conf" to see them).

IV ANALYSING THE OUTPUT

There are three important things that must be considered when analysing
the output: TTree contents in the ROOT file, particle ID's used by
INCL and the normalization of results.

The ASCII data is converted using the program out2root into a root
file with one TTree object. The tree (called "h101") contains numbers
and arrays. Here is the list of variables in the tree:
Massini	        A of the remnant
Mzini	        Z    "        "
Exini	        Excit energy " "
Mulncasc	Cascade n multip.
Mulnevap	Evapo   "      "
Mulntot	        Total   "      "
Bimpact	        Impact parameter
Jremn	        Remnant Intrinsic Spin
Kfis	        Fission 1/0=Y/N
Estfis		Excit energy at fis
Izfis		Z of fiss nucleus
Iafis		A of "          "
Ntrack		Number of particles
Ityp[Ntrack]	emitted in cascade (1)
                or evapo   (0)
Avv[Ntrack]	A (-1 for pions)
Zvv[Ntrack]	Z
Enerj[Ntrack]	kinetic energy
Plab[Ntrack]	momentum
tetlab[Ntrack]	Theta (deg)
philab[Ntrack]	Phi   (deg)

The particles are identified using variables Avv and Zvv. The particle
codes are as follows:
Avv Zvv  Type
-1   -1   Pi-
-1   0    Pi0
-1   1    Pi+
1    1    Proton
1    0    Neutron
A    Z    Nucleus fragment (A > 1, Z >= 1), some examples below
2    1    Deuteron
3    1    Triton
4    3    He3
4    2    Alpha
208  82   Pb208

The normalization factor is calculated as follows:
f = geomCrossSection/(Events - transparentEvents)
All these numbers canbe found in the output.out.runSummary file where
the output.out is the ASCII file produced by the test driver. The
command to plot e.g. the outcoming particle type and isotope
distribution is as follows:
h101->Draw("Avv", "<insert normalization coefficient here>")
