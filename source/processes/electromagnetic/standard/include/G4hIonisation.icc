//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4hIonisation.icc,v 1.10 2002-03-27 21:43:55 vnivanch Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
// 
//------------------ G4hIonisation physics process -----------------------------
//                   by Laszlo Urban, 30 May 1997
//------------------------------------------------------------------------------
//
// 24/09/97: corrected by L.Urban
// 20/11/97: correction on MeanFreePath for KineticEnergy > HighestLimit
// 14-08-01: 'cleanup' of GetMeanFreePath (mma)
// 
//------------------------------------------------------------------------------

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......
//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

inline G4bool G4hIonisation::IsApplicable(
                            const G4ParticleDefinition& particle)
{
   return(particle.GetPDGCharge() != 0.);
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

inline G4double G4hIonisation::GetMeanFreePath(const G4Track& track, G4double,
                                               G4ForceCondition*) 
{
 const G4DynamicParticle* dynParticle = track.GetDynamicParticle();
 G4double kinEnergy = (dynParticle->GetKineticEnergy())*initialMass/(dynParticle->GetMass());
 G4double q = dynParticle->GetCharge()/eplus;
 G4double currentChargeSquare = q*q;
 G4Material* aMaterial  = track.GetMaterial();
   
 G4double MeanFreePath;
 G4bool isOut;
    
 if(kinEnergy > UpperBoundLambda) kinEnergy = UpperBoundLambda;
 if(kinEnergy > LowerBoundLambda)
         MeanFreePath = (((*theMeanFreePathTable)(aMaterial->GetIndex()))->
                        GetValue(kinEnergy, isOut))/currentChargeSquare; 
 else    MeanFreePath = DBL_MAX;

 return MeanFreePath;
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

