// This code implementation is the intellectual property of
// the GEANT4 collaboration.
//
// By copying, distributing or modifying the Program (or any work
// based on the Program) you indicate your acceptance of this statement,
// and all its terms.
//
// $Id: G4eIonisationPlus.icc,v 1.2 1999-12-15 14:51:49 gunter Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
// 
// ---------------------------------------------------------------
//      GEANT 4 class inlined methods file 
//
//      For information related to this code contact:
//      CERN, IT Division, ASD group
//      ------------ G4eIonisationPlus physics process ------------
//                  by Laszlo Urban, 20 March 1997
// ***************************************************************
// It is the first implementation of the NEW IONISATION PROCESS.               
// It calculates the ionisation of e+/e-.
// ***************************************************************
//
// 24-11-97: correction on MeanFreePath for KinEnergy > HighestLimit
//
// ---------------------------------------------------------------

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

inline G4bool G4eIonisationPlus::IsApplicable(
                            const G4ParticleDefinition& particle)
{
   return(  (&particle == G4Electron::Electron())
          ||(&particle == G4Positron::Positron()) );
}
         
//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

inline G4double G4eIonisationPlus::GetMeanFreePath(
                                               const G4Track& track,
                                               G4double,
                                               G4ForceCondition*) 
{
   const G4DynamicParticle* aParticle = track.GetDynamicParticle();
   G4double KineticEnergy = aParticle->GetKineticEnergy();
   G4Material* aMaterial  = track.GetMaterial();
   
   G4double MeanFreePath;
   G4bool isOutRange ;

   if( KineticEnergy < LowestKineticEnergy )
     MeanFreePath = DBL_MAX;
   else {
     if (KineticEnergy > HighestKineticEnergy) KineticEnergy = HighestKineticEnergy;
     MeanFreePath = ((*theMeanFreePathTable)(aMaterial->GetIndex()))->
                    GetValue( KineticEnergy, isOutRange);
     }

   return MeanFreePath ;
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

inline G4double G4eIonisationPlus::GetLambda(
                              G4double KineticEnergy,
                              G4Material* material)
{
  G4bool isOut;
  const G4MaterialTable* theMaterialTable =
                       G4Material::GetMaterialTable() ;
 
  G4double lambda = (*theMeanFreePathTable)
                    [material->GetIndex()]->
                    GetValue(KineticEnergy,isOut);
  return lambda;
}


