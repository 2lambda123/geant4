//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
// $Id: G4eIonisation52.icc,v 1.2 2006-06-29 19:52:12 gunter Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
//
//----------------- G4eIonisation52 physics process ------------------------------
//                  by Laszlo Urban, 20 March 1997
//------------------------------------------------------------------------------
//
// 24-11-97 correction on MeanFreePath for KinEnergy > HighestLimit
// 28-05-01 V.Ivanchenko minor changes to provide ANSI -wall compilation
// 16-01-03 Migrade to cut per region (V.Ivanchenko)
// 08-08-03 This class is frozen at the release 5.2 (V.Ivanchenko)
//
//------------------------------------------------------------------------------

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......
//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

inline G4bool G4eIonisation52::IsApplicable(const G4ParticleDefinition& particle)
{
   return(  (&particle == G4Electron::Electron())
          ||(&particle == G4Positron::Positron()) );
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

inline G4double G4eIonisation52::GetMeanFreePath(const G4Track& track, G4double,
                                               G4ForceCondition*)
{
 G4double KineticEnergy = track.GetDynamicParticle()->GetKineticEnergy();
 const G4MaterialCutsCouple* couple  = track.GetMaterialCutsCouple();

 G4double MeanFreePath;
 G4bool isOut;

 if (KineticEnergy > HighestKineticEnergy) KineticEnergy = HighestKineticEnergy;
 if (KineticEnergy > LowestKineticEnergy)
         MeanFreePath = ((*theMeanFreePathTable)(couple->GetIndex()))->
                        GetValue(KineticEnergy, isOut);
 else    MeanFreePath = DBL_MAX;

 return MeanFreePath;
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

inline
G4double G4eIonisation52::GetLambda(G4double KineticEnergy, const G4MaterialCutsCouple* couple)
{
  G4bool isOut;
  return (*theMeanFreePathTable)[couple->GetIndex()]->
                                           GetValue(KineticEnergy,isOut);
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

inline G4double G4eIonisation52::SecondaryEnergyThreshold(size_t index)
{
  return (*secondaryEnergyCuts)[index];
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......
