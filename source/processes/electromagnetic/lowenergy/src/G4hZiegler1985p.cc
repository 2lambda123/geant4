// This code implementation is the intellectual property of
// the GEANT4 collaboration.
//
// By copying, distributing or modifying the Program (or any work
// based on the Program) you indicate your acceptance of this statement,
// and all its terms.
//
// -------------------------------------------------------------------
//
// GEANT4 Class file
//
// For information related to this code contact:
// Geant4 Collaboration
//
// File name:     G4hZiegler1985p
//
// Author:        V.Ivanchenko (Vladimir.Ivanchenko@cern.ch)
// 
// Creation date: 20 July 2000
//
// Modifications: 
// 20/07/2000  V.Ivanchenko First implementation
//
// Class Description: 
//
// Electronic stopping power parametrised according to
// J.F.Ziegler, J.P.Biersack, U.Littmark The Stoping and
// Range of Ions in Solids, Vol.1, Pergamon Press, 1985
//
// Class Description: End 
//
// -------------------------------------------------------------------
//
//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

#include "G4hZiegler1985p.hh"
#include "G4UnitsTable.hh"
#include "globals.hh"
#include "G4Material.hh"

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

G4hZiegler1985p::G4hZiegler1985p():G4VhElectronicStoppingPower(), 
  protonMassAMU(1.007276)
{;}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

G4hZiegler1985p::~G4hZiegler1985p() 
{;}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

G4bool G4hZiegler1985p::HasMaterial(const G4Material* material) 
{
  if(1 == (material->GetNumberOfElements())) return true;
  return false ;
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

G4double G4hZiegler1985p::StoppingPower(const G4Material* material,
                                              G4double kineticEnergy) 
{
  G4double ionloss = 0.0 ;

  // pure material (normally not the case for this function)
  if(1 == (material->GetNumberOfElements())) {
    G4double z = material->GetZ() ;
    G4double ionloss = ElectronicStoppingPower( z, kineticEnergy ) ;  
  }
  
  return ionloss;
}  

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

G4double G4hZiegler1985p::ElectronicStoppingPower(G4double z,
                                                  G4double kineticEnergy) const
{
  G4double ionloss ;
  G4int i = G4int(z) - 1 ;  // index of atom
  if(i < 0)  i = 0 ;
  if(i > 91) i = 91 ;
  
  // The data and the fit from: 
  // J.F.Ziegler, J.P.Biersack, U.Littmark The Stoping and
  // Range of Ions in Solids, Vol.1, Pergamon Press, 1985
  // Proton kinetic energy in keV/amu  
  
  G4double kinE = kineticEnergy/(keV*protonMassAMU) ; 
  
  static G4double a[92][8] = {
   0.0091827, 0.0053496, 0.69741, 0.48493, 316.07 , 1.0143, 9329.3, 0.053989,
   0.11393,   0.0051984, 1.0822,  0.39252, 1081.0 , 1.0645, 4068.5, 0.017699,
   0.85837,   0.0050147, 1.6044,  0.38844, 1337.3 , 1.047,  2659.2, 0.01898,
   0.8781,    0.0051049, 5.4232,  0.2032 , 1200.6 , 1.0211, 1401.8, 0.038529,
   1.4608,    0.0048836, 2.338,   0.44249, 1801.3 , 1.0352, 1784.1, 0.02024,
   3.2579,    0.0049148, 2.7156,  0.36473, 2092.2 , 1.0291, 2643.6, 0.018237,
   0.59674,   0.0050837, 4.2073,  0.30612, 2394.2 , 1.0255, 4892.1, 0.016006,
   0.75253,   0.0050314, 4.0824,  0.30067, 2455.8 , 1.0181, 5069.7, 0.017426,
   1.226,     0.0051385, 3.2246,  0.32703, 2525.0 , 1.0142, 7563.6, 0.019469,
   1.0332,    0.0051645, 3.004,   0.33889, 2338.6 ,0.99997, 6991.2, 0.021799,

   6.0972,    0.0044292, 3.1929,  0.45763, 3163.3 , 0.95182, 2380.6, 0.081835,
   14.013,    0.0043646, 2.2641,  0.36326, 2187.4 , 0.99098, 6264.8, 0.0462,
   0.039001,  0.0045415, 5.5463,  0.39562, 1589.2 , 0.95316, 816.16, 0.047484,
   2.072,     0.0044516, 3.5585,  0.53933, 1515.2 , 0.93161, 1790.3, 0.035189,
   17.575,    0.0038346, 0.078694,1.2388,  2806.0 , 0.97284, 1037.6, 0.012879,
   16.126,    0.0038315, 0.054164,1.3104,  2813.3 , 0.96587, 1251.4, 0.011847,
   3.217,     0.0044579, 3.6696,  0.5091,  2734.6 , 0.96253, 2187.5, 0.016907,
   2.0379,    0.0044775, 3.0743,  0.54773, 3505.0 , 0.96253, 1714.0, 0.011701,
   0.74171,   0.0043051, 1.1515,  0.95083, 917.21 , 0.8782,  389.93, 0.18926,
   9.1316,    0.0043809, 5.4611,  0.31327, 3891.8 , 0.97933, 6267.9, 0.015196,

   6.0972,    0.0044292, 3.1929,  0.45763, 3163.3 , 0.95182, 2380.6, 0.081835,
   14.013,    0.0043646, 2.2641,  0.36326, 2187.4 , 0.99098, 6264.8, 0.0462,
   0.039001,  0.0045415, 5.5463,  0.39562, 1589.2 , 0.95316, 816.16, 0.047484,
   2.072,     0.0044516, 3.5585,  0.53933, 1515.2 , 0.93161, 1790.3, 0.035189,
   17.575,    0.0038346, 0.078694,1.2388,  2806.0 , 0.97284, 1037.6, 0.012879,
   16.126,    0.0038315, 0.054164,1.3104,  2813.3 , 0.96587, 1251.4, 0.011847,
   3.217,     0.0044579, 3.6696,  0.5091,  2734.6 , 0.96253, 2187.5, 0.016907,
   2.0379,    0.0044775, 3.0743,  0.54773, 3505.0 , 0.96253, 1714.0, 0.011701,
   0.74171,   0.0043051, 1.1515,  0.95083, 917.21 , 0.8782,  389.93, 0.18926,
   9.1316,    0.0043809, 5.4611,  0.31327, 3891.8 , 0.97933, 6267.9, 0.015196,

   6.0972,    0.0044292, 3.1929,  0.45763, 3163.3 , 0.95182, 2380.6, 0.081835,
   14.013,    0.0043646, 2.2641,  0.36326, 2187.4 , 0.99098, 6264.8, 0.0462,
   0.039001,  0.0045415, 5.5463,  0.39562, 1589.2 , 0.95316, 816.16, 0.047484,
   2.072,     0.0044516, 3.5585,  0.53933, 1515.2 , 0.93161, 1790.3, 0.035189,
   17.575,    0.0038346, 0.078694,1.2388,  2806.0 , 0.97284, 1037.6, 0.012879,
   16.126,    0.0038315, 0.054164,1.3104,  2813.3 , 0.96587, 1251.4, 0.011847,
   3.217,     0.0044579, 3.6696,  0.5091,  2734.6 , 0.96253, 2187.5, 0.016907,
   2.0379,    0.0044775, 3.0743,  0.54773, 3505.0 , 0.96253, 1714.0, 0.011701,
   0.74171,   0.0043051, 1.1515,  0.95083, 917.21 , 0.8782,  389.93, 0.18926,
   9.1316,    0.0043809, 5.4611,  0.31327, 3891.8 , 0.97933, 6267.9, 0.015196,

   6.0972,    0.0044292, 3.1929,  0.45763, 3163.3 , 0.95182, 2380.6, 0.081835,
   14.013,    0.0043646, 2.2641,  0.36326, 2187.4 , 0.99098, 6264.8, 0.0462,
   0.039001,  0.0045415, 5.5463,  0.39562, 1589.2 , 0.95316, 816.16, 0.047484,
   2.072,     0.0044516, 3.5585,  0.53933, 1515.2 , 0.93161, 1790.3, 0.035189,
   17.575,    0.0038346, 0.078694,1.2388,  2806.0 , 0.97284, 1037.6, 0.012879,
   16.126,    0.0038315, 0.054164,1.3104,  2813.3 , 0.96587, 1251.4, 0.011847,
   3.217,     0.0044579, 3.6696,  0.5091,  2734.6 , 0.96253, 2187.5, 0.016907,
   2.0379,    0.0044775, 3.0743,  0.54773, 3505.0 , 0.96253, 1714.0, 0.011701,
   0.74171,   0.0043051, 1.1515,  0.95083, 917.21 , 0.8782,  389.93, 0.18926,
   9.1316,    0.0043809, 5.4611,  0.31327, 3891.8 , 0.97933, 6267.9, 0.015196,

   6.0972,    0.0044292, 3.1929,  0.45763, 3163.3 , 0.95182, 2380.6, 0.081835,
   14.013,    0.0043646, 2.2641,  0.36326, 2187.4 , 0.99098, 6264.8, 0.0462,
   0.039001,  0.0045415, 5.5463,  0.39562, 1589.2 , 0.95316, 816.16, 0.047484,
   2.072,     0.0044516, 3.5585,  0.53933, 1515.2 , 0.93161, 1790.3, 0.035189,
   17.575,    0.0038346, 0.078694,1.2388,  2806.0 , 0.97284, 1037.6, 0.012879,
   16.126,    0.0038315, 0.054164,1.3104,  2813.3 , 0.96587, 1251.4, 0.011847,
   3.217,     0.0044579, 3.6696,  0.5091,  2734.6 , 0.96253, 2187.5, 0.016907,
   2.0379,    0.0044775, 3.0743,  0.54773, 3505.0 , 0.96253, 1714.0, 0.011701,
   0.74171,   0.0043051, 1.1515,  0.95083, 917.21 , 0.8782,  389.93, 0.18926,
   9.1316,    0.0043809, 5.4611,  0.31327, 3891.8 , 0.97933, 6267.9, 0.015196,

   6.0972,    0.0044292, 3.1929,  0.45763, 3163.3 , 0.95182, 2380.6, 0.081835,
   14.013,    0.0043646, 2.2641,  0.36326, 2187.4 , 0.99098, 6264.8, 0.0462,
   0.039001,  0.0045415, 5.5463,  0.39562, 1589.2 , 0.95316, 816.16, 0.047484,
   2.072,     0.0044516, 3.5585,  0.53933, 1515.2 , 0.93161, 1790.3, 0.035189,
   17.575,    0.0038346, 0.078694,1.2388,  2806.0 , 0.97284, 1037.6, 0.012879,
   16.126,    0.0038315, 0.054164,1.3104,  2813.3 , 0.96587, 1251.4, 0.011847,
   3.217,     0.0044579, 3.6696,  0.5091,  2734.6 , 0.96253, 2187.5, 0.016907,
   2.0379,    0.0044775, 3.0743,  0.54773, 3505.0 , 0.96253, 1714.0, 0.011701,
   0.74171,   0.0043051, 1.1515,  0.95083, 917.21 , 0.8782,  389.93, 0.18926,
   9.1316,    0.0043809, 5.4611,  0.31327, 3891.8 , 0.97933, 6267.9, 0.015196,

   6.0972,    0.0044292, 3.1929,  0.45763, 3163.3 , 0.95182, 2380.6, 0.081835,
   14.013,    0.0043646, 2.2641,  0.36326, 2187.4 , 0.99098, 6264.8, 0.0462,
   0.039001,  0.0045415, 5.5463,  0.39562, 1589.2 , 0.95316, 816.16, 0.047484,
   2.072,     0.0044516, 3.5585,  0.53933, 1515.2 , 0.93161, 1790.3, 0.035189,
   17.575,    0.0038346, 0.078694,1.2388,  2806.0 , 0.97284, 1037.6, 0.012879,
   16.126,    0.0038315, 0.054164,1.3104,  2813.3 , 0.96587, 1251.4, 0.011847,
   3.217,     0.0044579, 3.6696,  0.5091,  2734.6 , 0.96253, 2187.5, 0.016907,
   2.0379,    0.0044775, 3.0743,  0.54773, 3505.0 , 0.96253, 1714.0, 0.011701,
   0.74171,   0.0043051, 1.1515,  0.95083, 917.21 , 0.8782,  389.93, 0.18926,
   9.1316,    0.0043809, 5.4611,  0.31327, 3891.8 , 0.97933, 6267.9, 0.015196,

   6.0972,    0.0044292, 3.1929,  0.45763, 3163.3 , 0.95182, 2380.6, 0.081835,
   14.013,    0.0043646, 2.2641,  0.36326, 2187.4 , 0.99098, 6264.8, 0.0462,
   0.039001,  0.0045415, 5.5463,  0.39562, 1589.2 , 0.95316, 816.16, 0.047484,
   2.072,     0.0044516, 3.5585,  0.53933, 1515.2 , 0.93161, 1790.3, 0.035189,
   17.575,    0.0038346, 0.078694,1.2388,  2806.0 , 0.97284, 1037.6, 0.012879,
   16.126,    0.0038315, 0.054164,1.3104,  2813.3 , 0.96587, 1251.4, 0.011847,
   3.217,     0.0044579, 3.6696,  0.5091,  2734.6 , 0.96253, 2187.5, 0.016907,
   2.0379,    0.0044775, 3.0743,  0.54773, 3505.0 , 0.96253, 1714.0, 0.011701,
   0.74171,   0.0043051, 1.1515,  0.95083, 917.21 , 0.8782,  389.93, 0.18926,
   9.1316,    0.0043809, 5.4611,  0.31327, 3891.8 , 0.97933, 6267.9, 0.015196,

   0.74171,   0.0043051, 1.1515,  0.95083, 917.21 , 0.8782,  389.93, 0.18926,
   9.1316,    0.0043809, 5.4611,  0.31327, 3891.8 , 0.97933, 6267.9, 0.015196
  };
  
  G4double e = kinE ;
  if ( kinE < 25.0 ) e = 25.0 ;
  
  // universal approximation  
  G4double slow  = a[i][0] * pow(e, a[i][1]) + a[i][2] * pow(e, a[i][3])  ;
  G4double shigh = log( a[i][6]/e + a[i][7]*e ) * a[i][4] / pow(e, a[i][5]) ;
  ionloss = slow*shigh / (slow + shigh) ; 
    
  // low energy region
  if ( kinE < 25.0 ) {
    
    G4double  s = 0.45 ;
    // light elements
    if(6.5 > z) s = 0.25 ;
    // semiconductors
    if(5 == i || 13 == i || 31 == i) s = 0.375 ;
    
    ionloss *= pow(kinE/25.0, s) ;
  }
  
  if ( ionloss < 0.0) ionloss = 0.0 ;
  
  return ionloss;
}

