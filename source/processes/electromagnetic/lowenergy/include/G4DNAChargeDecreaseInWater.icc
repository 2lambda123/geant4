// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
// -------------------------------------------------------------------
// $Id: G4DNAChargeDecreaseInWater.icc,v 1.5 2007-10-08 09:18:42 sincerti Exp $
// -------------------------------------------------------------------
//

#ifdef G4DNAChargeDecreaseInWater_HH

#include "G4Electron.hh"

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

template<typename CrossSectionPolicy, typename FinalStatesPolicy>
G4VParticleChange* G4DNAChargeDecreaseInWater<CrossSectionPolicy, FinalStatesPolicy>
::PostStepDoIt
(const G4Track& aTrack, const G4Step& aStep)
 {
  this->aParticleChange.Initialize(aTrack);
  this->aParticleChange.ProposeTrackStatus(fStopAndKill);

  G4double inK(aTrack.GetDynamicParticle()->GetKineticEnergy());

  G4int finalStateIndex(CrossSectionPolicy::RandomizePartialCrossSection(inK));
 
  G4int n(FinalStatesPolicy::NumberOfFinalStates(aTrack.GetDefinition(), finalStateIndex));
  G4double waterBindingEnergy(FinalStatesPolicy::WaterBindingEnergyConstant(aTrack.GetDefinition(), finalStateIndex));
  G4double outgoingParticleBindingEnergy(FinalStatesPolicy::OutgoingParticleBindingEnergyConstant(aTrack.GetDefinition(), finalStateIndex));
  
  G4double outK =0;
  if (aTrack.GetDefinition()==G4Proton::Proton())
    outK = inK - n*(inK*electron_mass_c2/proton_mass_c2) - waterBindingEnergy + outgoingParticleBindingEnergy;
  else
    outK = inK - n*(inK*electron_mass_c2/(3728*MeV)) - waterBindingEnergy + outgoingParticleBindingEnergy;

  if (outK<0)
  {
   G4String message;
   message="ChargeDecreaseDingfelder::PostStepDoIt - Final kinetic energy is below 0! Process ";
   message+=this->GetProcessName();
   
   G4Exception(message);
  }

  this->aParticleChange.ProposeLocalEnergyDeposit(waterBindingEnergy);
  this->aParticleChange.SetNumberOfSecondaries(1);
  this->aParticleChange.AddSecondary(new G4DynamicParticle(FinalStatesPolicy::OutgoingParticleDefinition(aTrack.GetDefinition(), finalStateIndex), aTrack.GetDynamicParticle()->GetMomentumDirection(), outK));
             
  return G4VDNAProcessInWater<CrossSectionPolicy, FinalStatesPolicy>::PostStepDoIt(aTrack, aStep);
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

template<typename CrossSectionPolicy, typename FinalStatesPolicy> 
G4bool                                  
G4DNAChargeDecreaseInWater<CrossSectionPolicy, FinalStatesPolicy>
::IsApplicable
(const G4ParticleDefinition & /*aParticleDefinition*/)
{
  return true;
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

#endif 

