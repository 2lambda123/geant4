//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4DNAChargeIncreaseInWater.icc,v 1.3 2006-05-25 17:57:10 pia Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//

#ifdef    G4DNACHARGEINCREASEINWATER_HH
 #include "G4Electron.hh"

 template<typename TotalCrossSectionPolicy, typename FinalStatesPolicy>
 G4VParticleChange* G4DNAChargeIncreaseInWater<TotalCrossSectionPolicy, FinalStatesPolicy>::PostStepDoIt(const G4Track& aTrack, const G4Step& aStep)
 {
  this->aParticleChange.Initialize(aTrack);
  this->aParticleChange.ProposeLocalEnergyDeposit(0.);
  this->aParticleChange.ProposeTrackStatus(fStopAndKill);
  
  G4double inK(aTrack.GetDynamicParticle()->GetKineticEnergy());
  
  const G4int z(10); // H2O number of electrons
  G4int finalStateIndex(TotalCrossSectionPolicy::RandomizePartialCrossSection(inK, z));

  G4int n(FinalStatesPolicy::NumberOfFinalStates(finalStateIndex));
  G4double outK(inK-FinalStatesPolicy::IncomingParticleBindingEnergyConstant(finalStateIndex));
  G4double electronK(inK*electron_mass_c2/proton_mass_c2);
  
  if (outK<0)
  {
   G4String message;
   message="G4DNAChargeIncreaseInWater<>::PostStepDoIt - Final kinetic energy is below 0! Process ";
   message+=this->GetProcessName();
   
   G4Exception(message);
  }
  
  this->aParticleChange.SetNumberOfSecondaries(n+1);
  this->aParticleChange.AddSecondary(new G4DynamicParticle(FinalStatesPolicy::OutgoingParticleDefinition(finalStateIndex), aTrack.GetDynamicParticle()->GetMomentumDirection(), outK));

  while (n>0)
  {
   n--;
   
   this->aParticleChange.AddSecondary(new G4DynamicParticle(FinalStatesPolicy::OutgoingParticleDefinition(finalStateIndex), aTrack.GetDynamicParticle()->GetMomentumDirection(), electronK));
  }
 
  return G4VDNAProcessInWater<TotalCrossSectionPolicy, FinalStatesPolicy>::PostStepDoIt(aTrack, aStep);
 }
#endif /* G4DNACHARGEINCREASEINWATER_HH */
