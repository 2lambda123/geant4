// This code implementation is the intellectual property of
// the GEANT4 collaboration.
//
// By copying, distributing or modifying the Program (or any work
// based on the Program) you indicate your acceptance of this statement,
// and all its terms.
//
// $Id: G4LowEnergyRayleigh.icc,v 1.10 2000-06-22 02:25:26 pia Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
// 
// ---------------------------------------------------------------
//      GEANT 4 class inlined methods file
//
//      For information related to this code contact:
//      CERN, CN Division, ASD group
//      ------------ G4LowEnergyRayleigh physics process ---------
//                   by A.Forti 1999/03/02
// ***************************************************************

inline G4bool G4LowEnergyRayleigh::IsApplicable(const G4ParticleDefinition& particle){
   return ( &particle == G4Gamma::Gamma() ); 	
}

inline G4double G4LowEnergyRayleigh::GetMeanFreePath(const G4Track& aTrack, G4double, G4ForceCondition*){

// returns the gamma mean free path in GEANT4 internal units
   const G4DynamicParticle* aDynamicGamma = aTrack.GetDynamicParticle();
   G4double GammaEnergy = aDynamicGamma->GetKineticEnergy();
   G4Material* aMaterial = aTrack.GetMaterial();

   G4bool isOutRange ;

   if (GammaEnergy > HighestEnergyLimit){
     MeanFreePath = DBL_MAX;
   }	
   else if(GammaEnergy < LowestEnergyLimit){

	MeanFreePath = DBL_MIN;
   }
   else {

       MeanFreePath = util.DataLogInterpolation(GammaEnergy, 
	                                   aMaterial->GetIndex(), 
                                           theMeanFreePathTable);	
   }	

   return MeanFreePath;
}





