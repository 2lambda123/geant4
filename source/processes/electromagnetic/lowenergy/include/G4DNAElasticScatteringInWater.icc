// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
// -------------------------------------------------------------------
// $Id: G4DNAElasticScatteringInWater.icc,v 1.1 2007-10-08 09:18:43 sincerti Exp $
// -------------------------------------------------------------------
//

#ifdef G4DNAElasticScatteringInWater_HH

#include "G4Electron.hh"

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

template<typename CrossSectionPolicy, typename FinalStatesPolicy>
G4VParticleChange* G4DNAElasticScatteringInWater<CrossSectionPolicy, FinalStatesPolicy>
::PostStepDoIt
(const G4Track& aTrack, const G4Step& aStep)
 {

 this->aParticleChange.Initialize(aTrack);

 G4double k=aTrack.GetDynamicParticle()->GetKineticEnergy();
 
 G4double killBelowThisEnergyLimit = 25 * eV;
  
 if (k<killBelowThisEnergyLimit)
  {
   G4int n(this->aParticleChange.GetNumberOfSecondaries());
   while (n>0)
   {
    n--;
    delete this->aParticleChange.GetSecondary(n);
   }
   this->aParticleChange.Clear();
 
   this->aParticleChange.Initialize(aTrack);

   this->aParticleChange.ProposeLocalEnergyDeposit(k);
   this->aParticleChange.ProposeTrackStatus(fStopAndKill);
   this->aParticleChange.ProposeEnergy(0.); 
   
  }

 else
 {

  G4double cosTheta;
  const G4int z(10); // H2O number of electrons
  
  //choice of angular model
  if ( k>=7*eV && k<200*eV ) cosTheta=FinalStatesPolicy::BrennerRandomizeCosTheta(k, z);
  if ( k>=200*eV && k<10*keV ) cosTheta=FinalStatesPolicy::EmfietzoglouRandomizeCosTheta(k, z);

  G4double phi;
  phi=2*pi*G4UniformRand();
  
  G4ThreeVector zVers(aTrack.GetDynamicParticle()->GetMomentumDirection());
  G4ThreeVector xVers(zVers.orthogonal());
  G4ThreeVector yVers(zVers.cross(xVers));
  
  G4double xDir;
  G4double yDir;
  
  xDir=std::sqrt(1-cosTheta*cosTheta);
  yDir=xDir;
  xDir*=cos(phi);
  yDir*=sin(phi);
  
  G4ThreeVector zPrimeVers((xDir*xVers + yDir*yVers + cosTheta*zVers).unit());

  this->aParticleChange.ProposeEnergy(k);
  this->aParticleChange.ProposeMomentumDirection(zPrimeVers);
  this->aParticleChange.SetNumberOfSecondaries(0);
  
}
 
  return G4VDNAProcessInWater<CrossSectionPolicy, FinalStatesPolicy>::PostStepDoIt(aTrack, aStep);
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

template<typename CrossSectionPolicy, typename FinalStatesPolicy> 
G4bool                                  
G4DNAElasticScatteringInWater<CrossSectionPolicy, FinalStatesPolicy>
::IsApplicable
(const G4ParticleDefinition & /*aParticleDefinition*/)
{
  return true;
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

#endif 

