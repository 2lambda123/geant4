//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4DNABornExcitationFinalStatesPolicy.icc,v 2005/09/19 13:55:54 Ziad FRANCIS
// GEANT4 tag $Name: not supported by cvs2svn $
//

#ifdef   G4DNABornExcitationFinalStatesPolicy_HH
 #include "Randomize.hh"


 template <typename EnergyLimitsPolicy>
 G4bool                                 G4DNABornExcitationFinalStatesPolicy<EnergyLimitsPolicy> :: KillIncomingParticle(G4double energy) const
 {
 if(energy < EnergyLimitsPolicy::lowEnergyLimit) return(true);
 else return (false);
 }

 template <typename EnergyLimitsPolicy>
 void                               G4DNABornExcitationFinalStatesPolicy<EnergyLimitsPolicy> ::BuildFinalStatesData(void) const
 {}

 template <typename EnergyLimitsPolicy>
 G4double                               G4DNABornExcitationFinalStatesPolicy<EnergyLimitsPolicy>::EnergyConstant(G4int excitationLevelIndex) const
 {
 const G4double excitationEnergy[]={8.22*eV, 10.00*eV, 11.24*eV, 12.61*eV, 13.77*eV};
 return(excitationEnergy[excitationLevelIndex]);
 }
 


#endif /* G4DNABornExcitationTotalCrossSectionPolicy_HH */

