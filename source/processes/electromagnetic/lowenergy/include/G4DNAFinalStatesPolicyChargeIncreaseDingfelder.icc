// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
// -------------------------------------------------------------------
// $Id: G4DNAFinalStatesPolicyChargeIncreaseDingfelder.icc,v 1.1 2007-10-08 09:18:43 sincerti Exp $
// -------------------------------------------------------------------
//

#ifdef G4DNAFinalStatesPolicyChargeIncreaseDingfelder_HH

#include "Randomize.hh"
#include "G4DNAGenericIonsManager.hh"

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

G4int G4DNAFinalStatesPolicyChargeIncreaseDingfelder
::NumberOfFinalStates
(G4ParticleDefinition * aParticleDefinition, G4int finalStateIndex )
 
{
  G4DNAGenericIonsManager *instance;
  instance = G4DNAGenericIonsManager::Instance();
  if (aParticleDefinition == instance->GetIon("hydrogen")) return 1;
  if (aParticleDefinition == instance->GetIon("alpha+")) return 1;
  
  if (aParticleDefinition == instance->GetIon("helium")) 
  {    if (finalStateIndex==0) return 1;
       return 2;
  }
  return 0;
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

G4ParticleDefinition*  
G4DNAFinalStatesPolicyChargeIncreaseDingfelder
::OutgoingParticleDefinition 
(G4ParticleDefinition * aParticleDefinition, G4int finalStateIndex) 
{
  G4DNAGenericIonsManager * instance(G4DNAGenericIonsManager::Instance());
  if (aParticleDefinition == instance->GetIon("hydrogen")) return G4Proton::Proton(); 
  if (aParticleDefinition == instance->GetIon("alpha+")) return instance->GetIon("alpha++");

  if (aParticleDefinition == instance->GetIon("alpha+")) return instance->GetIon("helium");
  {
    if (finalStateIndex==0) return instance->GetIon("alpha+"); 
    return instance->GetIon("alpha++");
  }
   return 0;
}
 
//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

G4double G4DNAFinalStatesPolicyChargeIncreaseDingfelder
::IncomingParticleBindingEnergyConstant
(G4ParticleDefinition * aParticleDefinition, G4int finalStateIndex )
{
   G4DNAGenericIonsManager * instance(G4DNAGenericIonsManager::Instance());
  if(aParticleDefinition == instance->GetIon("hydrogen")) return 13.6*eV;
  
  if(aParticleDefinition == instance->GetIon("alpha+"))
  {
    // Binding energy for    He+ -> He++ + e-    54.509 eV
    // Binding energy for    He  -> He+  + e-    24.587 eV
    return 54.509*eV;
  }
   
  if(aParticleDefinition == instance->GetIon("helium"))
  {
  // Binding energy for    He+ -> He++ + e-    54.509 eV
  // Binding energy for    He  -> He+  + e-    24.587 eV

  if (finalStateIndex==0) return 24.587*eV;
  return (54.509 + 24.587)*eV;
  }  

  return 0;
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

#endif 
