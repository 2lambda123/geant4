//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4MuIonisation.icc,v 1.5 2003-01-17 18:54:39 vnivanch Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
// 
//      GEANT 4 class inlined methods file 
//
//      ------------ G4MuIonisation physics process ------------
//                   by Laszlo Urban, September 1997
// ---------------------------------------------------------------
//
// 20/11/97 correction on MeanFreePath for KineticEnergy > HighestLimit
// 14-08-01 'cleanup' of GetMeanFreePath (mma)
// 16-01-03 Migrade to cut per region (V.Ivanchenko)
//
// ---------------------------------------------------------------

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....
//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

inline G4bool G4MuIonisation::IsApplicable(
                              const G4ParticleDefinition& particle)
{
   return ((&particle == G4MuonPlus::MuonPlus()  ) ||
           (&particle == G4MuonMinus::MuonMinus()) );
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

inline G4double G4MuIonisation::GetMeanFreePath(const G4Track& track, G4double,
                                                G4ForceCondition*)
{
 G4double KineticEnergy = track.GetDynamicParticle()->GetKineticEnergy();
 const G4MaterialCutsCouple* couple  = track.GetMaterialCutsCouple();

 G4double MeanFreePath;
 G4bool isOut;

 if (KineticEnergy > HighestKineticEnergy) KineticEnergy = HighestKineticEnergy;
 if (KineticEnergy > LowestKineticEnergy)
         MeanFreePath = ((*theMeanFreePathTable)(couple->GetIndex()))->
                        GetValue(KineticEnergy, isOut);
 else    MeanFreePath = DBL_MAX;

 return MeanFreePath;
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

inline G4double G4MuIonisation::SecondaryEnergyThreshold(size_t index)
{
  return (*secondaryEnergyCuts)[index];
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....

