//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4Region.icc,v 1.6 2003-11-02 14:01:22 gcosmo Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
// 
// class G4Region Inline Implementation file
//
// 19.09.02 - G.Cosmo: Created
// --------------------------------------------------------------------

// ********************************************************************
// Equality operator, defined by address only
// ********************************************************************
//
inline
G4bool G4Region::operator==(const G4Region& rg) const
{
  return (this==&rg) ? true : false;
}

// ********************************************************************
// GetName
// ********************************************************************
//
inline
const G4String& G4Region::GetName() const
{
  return fName;
}
    
// ********************************************************************
// SetName
// ********************************************************************
//
inline
void G4Region::SetName(const G4String& pName)
{
  fName = pName;
}

// ********************************************************************
// RegionModified
// ********************************************************************
//
inline
void G4Region::RegionModified(G4bool flag)
{
  fRegionMod = flag;
}

// ********************************************************************
// IsModified
// ********************************************************************
//
inline
G4bool G4Region::IsModified() const
{
  return fRegionMod;
}

// ********************************************************************
// SetProductionCuts
// ********************************************************************
//
inline
void G4Region::SetProductionCuts(G4ProductionCuts* cut)
{
  fCut = cut;
  fRegionMod = true;
}

// ********************************************************************
// GetProductionCuts
// ********************************************************************
//
inline
G4ProductionCuts* G4Region::GetProductionCuts() const
{
  return fCut;
}

// ********************************************************************
// GetLogicalVolumeIterator
// ********************************************************************
//
inline
std::vector<G4LogicalVolume*>::iterator
G4Region::GetRootLogicalVolumeIterator()
{
  G4RootLVList::iterator iterator =  G4RootLVList::iterator(fRootVolumes.begin());
  return iterator;
}

// ********************************************************************
// GetMaterialIterator
// ********************************************************************
//
inline
std::vector<G4Material*>::const_iterator
G4Region::GetMaterialIterator() const
{
  G4MaterialList::const_iterator iterator = fMaterials.begin();
  return iterator;
}

// ********************************************************************
// GetNumberOfMaterials
// ********************************************************************
//
inline
size_t G4Region::GetNumberOfMaterials() const
{
  return fMaterials.size();
}

// ********************************************************************
// GetNumberOfRootVolumes
// ********************************************************************
//
inline
size_t G4Region::GetNumberOfRootVolumes() const
{
  return fRootVolumes.size();
}

// ********************************************************************
// SetUserInformation
// ********************************************************************
//
inline
void G4Region::SetUserInformation(G4VUserRegionInformation* ui)
{
  fUserInfo = ui;
}

// ********************************************************************
// GetUserInformation
// ********************************************************************
//
inline
G4VUserRegionInformation* G4Region::GetUserInformation() const
{
  return fUserInfo;
}


