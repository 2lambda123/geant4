//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4AssemblyVolume.icc,v 1.4 2002-09-10 16:59:46 radoone Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
// 
// Class G4AssemblyVolume - inline implementation
//
// ----------------------------------------------------------------------

inline 
unsigned int G4AssemblyVolume::GetImprintsCount() const
{
  return fImprintsCounter;
}

inline 
void         G4AssemblyVolume::SetImprintsCount( unsigned int value )
{
  fImprintsCounter = value;
}


inline 
void         G4AssemblyVolume::ImprintsCountPlus()
{
  fImprintsCounter++;
}

inline 
void         G4AssemblyVolume::ImprintsCountMinus()
{
  fImprintsCounter--;
}

inline 
unsigned int G4AssemblyVolume::GetAssemblyID() const
{
  return fAssemblyID;
}

inline 
void         G4AssemblyVolume::SetAssemblyID( unsigned int value )
{
  fAssemblyID = value;
}

