//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4TransportationManager.icc,v 1.4 2006-04-27 16:30:05 gcosmo Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
// ------------------------------------------------------------
//  GEANT 4  inlined function members implementation
// ------------------------------------------------------------
//
// Created :  10 March 1997, J. Apostolakis
// Reviewed:  26 April 2006, G. Cosmo
//  
// ----------------------------------------------------------------------------

// ----------------------------------------------------------------------------
// GetNavigatorForTracking()
//
// Utility method to return the active navigator for tracking, always
// the first in the collection of registered navigators.
//
inline
G4Navigator* G4TransportationManager::GetNavigatorForTracking() const
{
   return fNavigators[0];
}

// ----------------------------------------------------------------------------
// SetNavigatorForTracking()
//
// Set the active navigator for tracking, always
// the first in the collection of registered navigators.
//
inline
void G4TransportationManager::SetNavigatorForTracking(G4Navigator* newNavigator)
{
   fNavigators[0] = newNavigator;
}

// ----------------------------------------------------------------------------
// GetPropagatorInField()
//
// Return the associated propagator in field.
//
inline
G4PropagatorInField* G4TransportationManager::GetPropagatorInField() const
{
   return fPropagatorInField;
}

// ----------------------------------------------------------------------------
// SetPropagatorInField()
//
// Set the associated propagator in field.
//
inline
void G4TransportationManager::
SetPropagatorInField( G4PropagatorInField* newFieldPropagator )
{
   fPropagatorInField = newFieldPropagator;
}

// ----------------------------------------------------------------------------
// GetFieldManager()
//
// Return the associated field manager.
//
inline
G4FieldManager* G4TransportationManager::GetFieldManager() const
{
   return fFieldManager;
}

// ----------------------------------------------------------------------------
// GetActiveNavigatorsIterator()
//
// Return an iterator to the list of active navigators.
//
inline
std::vector<G4Navigator*>::iterator
G4TransportationManager::GetActiveNavigatorsIterator()
{
   std::vector<G4Navigator*>::iterator iterator
     = std::vector<G4Navigator*>::iterator(fActiveNavigators.begin());
   return iterator;
}
