//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4NavigationLevelRep.icc,v 1.13 2005-06-06 13:41:26 gcosmo Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
//  1 October 1997 J.Apostolakis Initial version. 
//                        
// ----------------------------------------------------------------------

#if defined G4GEOM_ALLOC_EXPORT
  extern G4DLLEXPORT G4Allocator<G4NavigationLevelRep> aNavigLevelRepAllocator;
#else
  extern G4DLLIMPORT G4Allocator<G4NavigationLevelRep> aNavigLevelRepAllocator;
#endif

// Accessors
// --------------

inline
G4VPhysicalVolume*
G4NavigationLevelRep::GetPhysicalVolume()
{ 
  return sPhysicalVolumePtr; 
}

inline
const G4AffineTransform&
G4NavigationLevelRep::GetTransform() const 
{ 
  return sTransform; 
} 

inline
const G4AffineTransform*
G4NavigationLevelRep::GetTransformPtr() const 
{ 
  return &sTransform; 
} 

inline
EVolume G4NavigationLevelRep::GetVolumeType() const 
{ 
  return sVolumeType; 
}

inline
G4int G4NavigationLevelRep::GetReplicaNo() const 
{ 
  return sReplicaNo; 
}

inline
void G4NavigationLevelRep::AddAReference() 
{
  fCountRef++; 
}

inline
G4bool G4NavigationLevelRep::RemoveAReference() 
{
  return( --fCountRef <= 0 ); 
}

// There is no provision that this class is subclassed.
// If it is subclassed & new data members are added then the
// following "new" & "delete" will fail and give errors. 
//
inline
void* G4NavigationLevelRep::operator new(size_t)
{
  return (void *) aNavigLevelRepAllocator.MallocSingle();
}

inline
void G4NavigationLevelRep::operator delete(void *aLevelRep)
{
  aNavigLevelRepAllocator.FreeSingle((G4NavigationLevelRep *) aLevelRep);
}
