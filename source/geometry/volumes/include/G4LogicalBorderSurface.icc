//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4LogicalBorderSurface.icc,v 1.7 2003-11-28 00:36:25 gum Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
// 
// class G4LogicalBorderSurface inline implementation
//
// ********************************************************************

inline
void G4LogicalBorderSurface::SetPhysicalVolumes( G4VPhysicalVolume* vol1,
                                                 G4VPhysicalVolume* vol2 )
{
  Volume1 = vol1;
  Volume2 = vol2;
}

inline
const G4VPhysicalVolume* G4LogicalBorderSurface::GetVolume1() const
{
  return Volume1;
}

inline
const G4VPhysicalVolume* G4LogicalBorderSurface::GetVolume2() const
{
  return Volume2;
}

inline
void G4LogicalBorderSurface::SetVolume1(G4VPhysicalVolume* vol1)
{
  Volume1 = vol1;
}

inline
void G4LogicalBorderSurface::SetVolume2(G4VPhysicalVolume* vol2)
{
  Volume2 = vol2;
}
