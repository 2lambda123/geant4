// This code implementation is the intellectual property of
// the GEANT4 collaboration.
//
// By copying, distributing or modifying the Program (or any work
// based on the Program) you indicate your acceptance of this statement,
// and all its terms.
//
// $Id: G4FieldManager.icc,v 1.2 2000-06-02 12:10:48 japost Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
//
// G4FieldManager inline implementation 
//

inline
G4bool G4FieldManager::SetDetectorField(G4Field *detectorField)
{
   fDetectorField= detectorField;
   return 0;
}

inline
G4Field* G4FieldManager::GetDetectorField()
{ 
   // If pointer is null, should this raise an exception ??
   return fDetectorField;
} 

inline
G4bool G4FieldManager::DoesFieldExist()
{ 
   return (fDetectorField != 0);
} 

inline  
void G4FieldManager::SetChordFinder(G4ChordFinder *aChordFinder)
{
     fChordFinder= aChordFinder;
}

inline  
G4ChordFinder*  G4FieldManager::GetChordFinder()
{
     return fChordFinder;
}

inline G4double G4FieldManager::GetDeltaIntersection()
{ return fDelta_Intersection_Val; }

inline G4double G4FieldManager::GetDeltaOneStep()    
{ return fDelta_One_Step_Value; }

inline void G4FieldManager::SetDeltaOneStep(G4double valDeltaOneStep)
{ 
  fDelta_One_Step_Value= valDeltaOneStep;  
}

inline void G4FieldManager::SetDeltaIntersection(G4double valDeltaIntersection)
{
  fDelta_Intersection_Val = valDeltaIntersection;
}

// void  SetDeltaIntersection(G4double);   
inline void G4FieldManager::SetAccuraciesWithDeltaOneStep(G4double valDeltaOneStep)
{ 
  fDelta_One_Step_Value= valDeltaOneStep;  
  fDelta_Intersection_Val = 0.4 * fDelta_One_Step_Value;
}
