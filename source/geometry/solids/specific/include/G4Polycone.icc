//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4Polycone.icc,v 1.5 2004-09-22 13:14:50 gcosmo Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
// --------------------------------------------------------------------
// GEANT 4 inline definitions file
//
// G4Polycone.icc
//
// Implementation of inline methods of G4Polycone
// --------------------------------------------------------------------

inline
G4double G4Polycone::GetStartPhi() const
{
  return startPhi;
}

inline
G4double G4Polycone::GetEndPhi() const
{
  return endPhi;
}

inline G4bool G4Polycone::IsOpen() const
{
  return phiIsOpen;
}

inline
G4int G4Polycone::GetNumRZCorner() const
{
  return numCorner;
}

inline
G4PolyconeSideRZ G4Polycone::GetCorner(G4int index) const
{
  return corners[index];
}

inline
G4PolyconeHistorical* G4Polycone::GetOriginalParameters() const
{
  return original_parameters;
}

inline
void G4Polycone::SetOriginalParameters(G4PolyconeHistorical* pars)
{
  if (!pars)
    G4Exception("G4Polycone::SetOriginalParameters()", "InvalidSetup",
                FatalException, "NULL pointer to parameters!");
  *original_parameters = *pars;
  fCubicVolume = 0.;
}
