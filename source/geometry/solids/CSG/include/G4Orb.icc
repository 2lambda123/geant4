//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4Orb.icc,v 1.3 2005-08-04 10:57:55 gcosmo Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
// --------------------------------------------------------------------
// GEANT 4 inline definitions file
//
// G4Orb.icc
//
// Implementation of inline methods of G4Orb
// --------------------------------------------------------------------

inline
G4double G4Orb::GetRadius() const
{
  return fRmax;
}

inline
void G4Orb::SetRadius(G4double newRmax)
{
  fRmax=newRmax;
  fCubicVolume= 0.;
  fpPolyhedron = 0;
}

inline
G4double G4Orb::GetCubicVolume()
{
  if(fCubicVolume != 0.) {;}
  else   { fCubicVolume = 4*pi*fRmax*fRmax*fRmax/3.; }
  return fCubicVolume;
}
