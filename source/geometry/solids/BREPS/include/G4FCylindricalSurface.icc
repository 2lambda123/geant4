//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
//
// $Id: G4FCylindricalSurface.icc,v 1.3 2001-07-11 09:59:34 gunter Exp $
// GEANT4 tag $Name: not supported by cvs2svn $
//
// --------------------------------------------------------------------
// GEANT 4 inline definitions file
//
// G4FCylindricalSurface.icc
//
// Implementation of inline methods of G4FCylindricalSurface
// --------------------------------------------------------------------

inline
G4int G4FCylindricalSurface::operator==( const G4FCylindricalSurface& c ) const
{
  return ( origin == c.origin && 
	   Position == c.Position   && 
	   radius == c.radius && 
	   length == c.length    );
}

inline
G4String G4FCylindricalSurface::GetEntityType() const
{
  return G4String("Cylindrical_Surface");
}

inline
G4double G4FCylindricalSurface::GetLength() const
{ 
  return length; 
}

inline
G4Vector3D G4FCylindricalSurface::GetAxis() const
{
  return Position.GetAxis();
}
  
inline
G4double G4FCylindricalSurface::GetRadius() const
{
  return radius;
}
